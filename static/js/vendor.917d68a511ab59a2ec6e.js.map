{"version":3,"sources":["webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/net.js","webpack:///./node_modules/ol/source/BingMaps.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/CartoDB.js","webpack:///./node_modules/ol/source/Cluster.js","webpack:///./node_modules/ol/reproj/Image.js","webpack:///./node_modules/ol/source/Image.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/source/ImageArcGISRest.js","webpack:///./node_modules/ol/source/ImageCanvas.js","webpack:///./node_modules/ol/source/ImageMapGuide.js","webpack:///./node_modules/ol/source/ImageStatic.js","webpack:///./node_modules/ol/source/WMSServerType.js","webpack:///./node_modules/ol/source/ImageWMS.js","webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/Raster.js","webpack:///./node_modules/ol/source/Stamen.js","webpack:///./node_modules/ol/source/TileArcGISRest.js","webpack:///./node_modules/ol/source/TileDebug.js","webpack:///./node_modules/ol/source/TileJSON.js","webpack:///./node_modules/ol/source/TileWMS.js","webpack:///./node_modules/ol/source/UTFGrid.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/tilegrid/WMTS.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/source/Zoomify.js","webpack:///./node_modules/ol/source.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/GeolocationProperty.js","webpack:///./node_modules/ol/Geolocation.js","webpack:///./node_modules/ol/geom/flat/geodesic.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/Graticule.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction/DragAndDrop.js","webpack:///./node_modules/ol/interaction/DragRotateAndZoom.js","webpack:///./node_modules/ol/interaction/Extent.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/interaction/Translate.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/ol/VectorImageTile.js","webpack:///./node_modules/ol/VectorTile.js","webpack:///./node_modules/ol/control/FullScreen.js","webpack:///./node_modules/ol/control/OverviewMap.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/control/ZoomSlider.js","webpack:///./node_modules/ol/control/ZoomToExtent.js","webpack:///./node_modules/ol/webgl/Shader.js","webpack:///./node_modules/ol/webgl/Fragment.js","webpack:///./node_modules/ol/webgl/Vertex.js","webpack:///./node_modules/ol/render/webgl/circlereplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack:///./node_modules/ol/vec/mat4.js","webpack:///./node_modules/ol/render/webgl/Replay.js","webpack:///./node_modules/ol/render/webgl.js","webpack:///./node_modules/ol/webgl/Buffer.js","webpack:///./node_modules/ol/render/webgl/CircleReplay.js","webpack:///./node_modules/ol/render/webgl/texturereplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack:///./node_modules/ol/webgl/ContextEventType.js","webpack:///./node_modules/ol/webgl/Context.js","webpack:///./node_modules/ol/render/webgl/TextureReplay.js","webpack:///./node_modules/ol/render/webgl/ImageReplay.js","webpack:///./node_modules/ol/geom/flat/topology.js","webpack:///./node_modules/ol/render/webgl/linestringreplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack:///./node_modules/ol/render/webgl/LineStringReplay.js","webpack:///./node_modules/ol/render/webgl/polygonreplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack:///./node_modules/ol/structs/LinkedList.js","webpack:///./node_modules/ol/render/webgl/PolygonReplay.js","webpack:///./node_modules/ol/style/Atlas.js","webpack:///./node_modules/ol/style/AtlasManager.js","webpack:///./node_modules/ol/render/webgl/TextReplay.js","webpack:///./node_modules/ol/render/webgl/ReplayGroup.js","webpack:///./node_modules/ol/render/webgl/Immediate.js","webpack:///./node_modules/ol/renderer/webgl/defaultmapshader.js","webpack:///./node_modules/ol/renderer/webgl/defaultmapshader/Locations.js","webpack:///./node_modules/ol/renderer/webgl/Layer.js","webpack:///./node_modules/ol/renderer/webgl/ImageLayer.js","webpack:///./node_modules/ol/renderer/webgl/Map.js","webpack:///./node_modules/ol/renderer/webgl/tilelayershader.js","webpack:///./node_modules/ol/renderer/webgl/tilelayershader/Locations.js","webpack:///./node_modules/ol/renderer/webgl/TileLayer.js","webpack:///./node_modules/ol/renderer/webgl/VectorLayer.js","webpack:///./node_modules/ol/WebGLMap.js","webpack:///./node_modules/ol/index.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/events/EventTarget.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/layer/Heatmap.js","webpack:///./node_modules/ol/layer/VectorTile.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/pixelworks/lib/util.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/pixelworks/lib/index.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/pixelworks/lib/processor.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/array.js"],"names":["MapEvent","Event","type","map","opt_frameState","call","this","frameState","undefined","__proto__","prototype","Object","create","constructor","__webpack_require__","__webpack_exports__","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","__WEBPACK_IMPORTED_MODULE_9__transform_js__","CanvasImmediateRenderer","VectorContext","context","pixelRatio","extent","transform","viewRotation","context_","pixelRatio_","extent_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","flatCoordinates","offset","end","stride","pixelCoordinates","__WEBPACK_IMPORTED_MODULE_5__geom_flat_transform_js__","localTransform","alpha","globalAlpha","rotation","i","ii","length","x","y","Math","round","centerX","centerY","setTransform","apply","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","ends","drawCircle","geometry","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","dx","dy","radius","sqrt","beginPath","arc","PI","fill","stroke","getCenter","setStyle","style","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","drawGeometry","getType","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","POINT","drawPoint","LINE_STRING","drawLineString","POLYGON","drawPolygon","MULTI_POINT","drawMultiPoint","MULTI_LINE_STRING","drawMultiLineString","MULTI_POLYGON","drawMultiPolygon","GEOMETRY_COLLECTION","drawGeometryCollection","CIRCLE","drawFeature","feature","getGeometryFunction","geometries","getGeometriesArray","getFlatCoordinates","getStride","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","fillStyle","strokeState","contextStrokeState","lineCap","__WEBPACK_IMPORTED_MODULE_6__has_js__","__WEBPACK_IMPORTED_MODULE_0__array_js__","lineDash","setLineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","textState","contextTextState","textAlign","__WEBPACK_IMPORTED_MODULE_8__canvas_js__","font","textBaseline","fillStyleColor","getColor","__WEBPACK_IMPORTED_MODULE_1__colorlike_js__","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","imageStyle","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getSize","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","__WEBPACK_IMPORTED_MODULE_7__VectorContext_js__","state1","state2","zIndex","__WEBPACK_IMPORTED_MODULE_8__transform_js__","MapRenderer","Disposable","map_","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","push","getLayerRendererConstructors","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","size","resolution","center","removeLayerRenderers","key","removeLayerRendererByKey_","dispose","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","thisArg","layerFilter","thisArg2","result","viewResolution","layer","__WEBPACK_IMPORTED_MODULE_0__util_js__","toString","managed","layerStates","skippedFeatureUids","projection","translatedCoordinate","canWrapX","projectionExtent","worldWidth","__WEBPACK_IMPORTED_MODULE_4__extent_js__","ceil","layerStatesArray","layerState","__WEBPACK_IMPORTED_MODULE_6__layer_Layer_js__","layerRenderer","getLayerRenderer","getSource","getWrapX","forEachLayerAtPixel","pixel","hasFeatureAtCoordinate","__WEBPACK_IMPORTED_MODULE_5__functions_js__","layerKey","renderer","candidate","Error","__WEBPACK_IMPORTED_MODULE_2__events_js__","__WEBPACK_IMPORTED_MODULE_3__events_EventType_js__","CHANGE","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","getMap","render","removeUnusedLayerRenderers_","scheduleExpireIconCache","postRenderFunctions","scheduleRemoveUnusedLayerRenderers","bind","__WEBPACK_IMPORTED_MODULE_1__Disposable_js__","expireIconCache","__WEBPACK_IMPORTED_MODULE_7__style_IconImageCache_js__","expire","renderFrame","linearRing","twiceArea","x1","y1","x2","y2","linearRings","area","visible","minResolution","maxResolution","__WEBPACK_IMPORTED_MODULE_8__source_State_js__","Layer","BaseLayer","options","baseOptions","__WEBPACK_IMPORTED_MODULE_6__obj_js__","source","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","__WEBPACK_IMPORTED_MODULE_0__events_js__","__WEBPACK_IMPORTED_MODULE_3__Object_js__","__WEBPACK_IMPORTED_MODULE_5__layer_Property_js__","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","get","getSourceState","getState","UNDEFINED","handleSourceChange_","changed","__WEBPACK_IMPORTED_MODULE_1__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_7__render_EventType_js__","PRECOMPOSE","evt","Infinity","__WEBPACK_IMPORTED_MODULE_2__util_js__","set","__WEBPACK_IMPORTED_MODULE_4__layer_Base_js__","coordinates","createEmpty","extendCoordinate","value","opt_extent","slice","containsXY","extent1","extent2","createOrUpdate","extendCoordinates","createOrUpdateEmpty","extendFlatCoordinates","opt_this","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","corner","__WEBPACK_IMPORTED_MODULE_1__extent_Corner_js__","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","__WEBPACK_IMPORTED_MODULE_0__asserts_js__","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","min","max","deltaX","deltaY","start","intersects","startRel","coordinateRelationship","endRel","__WEBPACK_IMPORTED_MODULE_2__extent_Relationship_js__","minX","minY","maxX","maxY","startX","startY","endX","endY","slope","transformFn","xs","ys","_boundingExtentXYs","relationship","extendXY","getArea","isEmpty","getHeight","getIntersection","intersection","Stroke","opt_options","color_","color","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","width","checksum_","clone","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","d","ENABLE_RASTER_REPROJECTION","ERROR_THRESHOLD","TileEventType","UrlTile_UrlTile","TileSource","UrlTile","attributions","cacheSize","opaque","state","tileGrid","tilePixelRatio","wrapX","transition","tileLoadFunction","tileUrlFunction","fixedTileUrlFunction","tileurlfunction","urls","setUrls","url","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","event","tile","uid","util","tileState","TileState","LOADING","ERROR","LOADED","ABORT","dispatchEvent","Tile","setTileLoadFunction","tileCache","clear","opt_key","pruneExceptNewestZ","setKey","join","useTile","z","tileCoordKey","tilecoord","containsKey","__WEBPACK_IMPORTED_MODULE_11__source_State_js__","Property","LAYERS","LayerGroup","__WEBPACK_IMPORTED_MODULE_10__obj_js__","layers","layersListenerKeys_","listenerKeys_","__WEBPACK_IMPORTED_MODULE_6__events_js__","handleLayersChanged_","Array","isArray","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","unique","__WEBPACK_IMPORTED_MODULE_5__asserts_js__","setLayers","handleLayerChange_","forEach","getLayers","id","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","layersArray","getArray","__WEBPACK_IMPORTED_MODULE_4__ObjectEventType_js__","PROPERTYCHANGE","__WEBPACK_IMPORTED_MODULE_7__events_EventType_js__","collectionEvent","pos","ownLayerState","opacity","__WEBPACK_IMPORTED_MODULE_8__extent_js__","READY","__WEBPACK_IMPORTED_MODULE_9__layer_Base_js__","c1","distance","bearing","opt_radius","DEFAULT_RADIUS","lat1","__WEBPACK_IMPORTED_MODULE_0__math_js__","lon1","dByR","lat","asin","lon","atan2","getDistance","c2","lat2","deltaLatBy2","deltaLonBy2","a","easeIn","t","pow","inAndOut","IDLE","ANIMATING","INTERACTING","lineStringLength","obj","ol_uid","uidCounter_","VERSION","ua","navigator","userAgent","toLowerCase","FIREFOX","indexOf","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","CANVAS_LINE_DASH","has","document","createElement","getContext","e","GEOLOCATION","TOUCH","POINTER","MSPOINTER","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","XY","XYZ","XYM","XYZM","ACTIVE","EventSource","dispatcher","mapping","mapping_","getEvents","keys","getHandlerForEvent","eventType","target","listener","listen","listeners","getListeners","listenerObj","findListener","unlistenByKey","listenerMap","getListenerMap","removeListeners","__WEBPACK_IMPORTED_MODULE_0__obj_js__","opt_setDeleteIndex","bindTo","deleteIndex","ol_lm","removeEventListener","boundListener","opt_once","callOnce","addEventListener","bindListener","splice","global","emptyObject","freeze","isUndef","v","isDef","isTrue","isPrimitive","isObject","_toString","isPlainObject","isRegExp","isValidArrayIndex","n","parseFloat","String","floor","isFinite","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","list","split","isBuiltInTag","isReservedAttribute","remove","arr","item","index","hasOwnProperty","hasOwn","cached","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","Function","ctx","boundFn","l","arguments","_length","toArray","ret","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","test","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","add","warn","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","update","targetStack","pushTarget","_target","popTarget","pop","VNode","tag","data","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","parent","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","method","original","args","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","src","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","mergeAssets","hook","key$1","props","methods","inject","computed","provide","defaultStrat","mergeOptions","normalizeProps","normalized","normalizeInject","dirs","directives","normalizeDirectives","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","default","$options","_props","getPropDefaultValue","prevShouldObserve","match","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","setImmediate","MessageChannel","setTimeout","channel","port","port2","port1","onmessage","postMessage","Promise","p","resolve","then","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","name","passive","once$$1","capture","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","hash","altKey","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","last","isTextNode","shift","_isVList","ensureCtor","comp","base","__esModule","toStringTag","getFirstComponentChild","$once","$on","remove$1","$off","updateComponentListeners","oldListeners","resolveSlots","slots","attrs","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","isInInactiveTree","_inactive","activateChildComponent","direct","_directInactive","$children","callHook","handlers","j","_hasHookEvent","$emit","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","_watcher","_isMounted","callUpdatedHooks","emit","uid$1","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","sync","active","dirty","deps","newDeps","depIds","newDepIds","expression","path","segments","parsePath","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","teardown","_isBeingDestroyed","sharedPropertyDefinition","proxy","sourceKey","initState","propsOptions","_propKeys","loop","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","handler","createWatcher","initWatch","shouldCache","createComputedGetter","$watch","resolveInject","filter","provideKey","_provided","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","slotNodes","$slots","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","cloneAndMarkFunctionalResult","mergeProps","componentVNodeHooks","init","hydrating","parentElm","refElm","_isDestroyed","keepAlive","mountedNode","prepatch","_isComponent","_parentVnode","_parentElm","_refElm","inlineTemplate","createComponentInstanceForVnode","$mount","oldVnode","parentVnode","renderChildren","hasChildren","_renderChildren","$vnode","_vnode","$attrs","$listeners","propKeys","_parentListeners","$forceUpdate","updateChildComponent","insert","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","_base","cid","factory","errorComp","resolved","loading","loadingComp","contexts","forceRender","reject","reason","component","delay","timeout","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","extractPropsFromVNodeData","functional","renderContext","vnodes","createFunctionalComponent","nativeOn","abstract","installComponentHooks","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","applyNS","force","class","registerDeepBindings","_createElement","uid$3","super","superOptions","modifiedOptions","modified","latest","extended","extendOptions","sealed","sealedOptions","dedupe","resolveModifiedOptions","components","Vue","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","mixin","use","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","el","initMixin","dataDef","propsDef","$set","$delete","immediate","stateMixin","hookRE","cbs","i$1","eventsMixin","_update","prevEl","$el","prevVnode","prevActiveInstance","__patch__","__vue__","lifecycleMixin","$nextTick","_render","ref","renderMixin","patternTypes","RegExp","builtInComponents","KeepAlive","include","exclude","Number","created","destroyed","mounted","this$1","parseInt","configDef","delete","plugin","installedPlugins","_installedPlugins","unshift","install","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","version","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","query","selected","querySelector","nodeOps","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","removeAttribute","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","prev","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","trim","pushFilter","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","m","addProp","plain","addAttr","addRawAttr","attrsMap","attrsList","addDirective","arg","addHandler","important","events","right","middle","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","next","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","add$1","_withTask","onceHandler","remove$2","createOnceHandler","updateDOMListeners","change","normalizeEvents","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","activeElement","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","cssText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","_leaveCb","cancelled","_enterCb","nodeType","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","createPatchFunction","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","h","rawChild","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","left","top","moved","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","cloneNode","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","parseText","tagRE","tokenValue","tokens","rawTokens","exec","@binding","klass$1","staticKeys","transformNode","classBinding","genData","decoder","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","attribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","IS_REGEX_CAPTURING_BROKEN","g","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","re","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","argRE","bindRE","modifierRE","decodeHTMLCached","createASTElement","makeAttrsMap","parse","template","isPreTag","root","currentParent","stack","preserveWhitespace","inPre","closeElement","element","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","all","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","ieNSBug","ieNSPrefix","guardIESVGBug","forbidden","checkRootConstraints","processPre","processRawAttrs","processed","processFor","if","addIfCondition","block","else","elseif","processIf","processOnce","processElement","findPrevElement","processIfConditions","slotScope","slotTarget","lastNode","for","checkInFor","processRef","slotName","processSlot","processComponent","isProp","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","alias","iteratorMatch","iterator1","iterator2","parseFor","condition","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","_warn","code","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","reduce","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","self","ctrl","alt","meta","genHandlers","genHandler","isMethodPath","isFunctionExpression","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyCode","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","altGen","altHelper","genFor","ifProcessed","genIf","genChildren","bind$$1","genSlot","componentName","genData$2","genComponent","altEmpty","genIfConditions","conditions","genTernaryExp","needRuntime","hasRuntime","gen","genDirectives","genProps","genScopedSlot","inlineRenderFns","genInlineTemplate","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","createFunction","errors","baseCompile","div","compileToFunctions","compile","finalOptions","tips","tip","compiled","fnGenErrors","createCompileToFunctionFn","getShouldDecode","href","idToTemplate","mount","documentElement","outerHTML","container","getOuterHTML","templates","tileUrlFunctions","createFromTemplate","createFromTileUrlFunctions","tileCoord","charCode","startCharCode","stopCharCode","fromCharCode","__WEBPACK_IMPORTED_MODULE_2__tilecoord_js__","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","__WEBPACK_IMPORTED_MODULE_1__math_js__","getDefaultTileGrid","opt_maxZoom","opt_tileSize","opt_corner","__WEBPACK_IMPORTED_MODULE_3__extent_Corner_js__","resolutions","resolutionsFromExtent","__WEBPACK_IMPORTED_MODULE_7__tilegrid_TileGrid_js__","origin","tileSize","createForExtent","extentFromProjection","createForProjection","setDefaultTileGrid","getTileCoordCenter","worldsAway","getTileCoordForCoordAndZ","__WEBPACK_IMPORTED_MODULE_4__obj_js__","__WEBPACK_IMPORTED_MODULE_5__proj_js__","maxZoom","__WEBPACK_IMPORTED_MODULE_0__tilegrid_common_js__","height","__WEBPACK_IMPORTED_MODULE_1__size_js__","half","__WEBPACK_IMPORTED_MODULE_6__proj_Units_js__","DEGREES","getMetersPerUnit","jsonp","opt_errback","opt_callbackParam","script","cleanup","async","timer","clearTimeout","getElementsByTagName","source_BingMaps","TileImage","BingMaps","hidpi","crossOrigin","proj","reprojectionErrorThreshold","State","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","sourceProjection","getProjection","tilegrid","imageWidth","imageHeight","minZoom","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","setAttributions","zoom","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","epsg4326Extent","ol_extent","attribution","setState","source_TileImage","source_XYZ","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","XMLHttpRequest","handleInitResponse_","handleInitError_","setRequestHeader","send","status","responseText","tilesUrl","cdn_url","https","layergroupid","source_Cluster","VectorSource","Cluster","features","geometryFunction","getGeometry","asserts","Point","EventType","refresh","loadFeatures","cluster","addFeatures","setDistance","mapDistance","getFeatures","clustered","getCoordinates","neighbors","getFeaturesInExtent","neighbor","createCluster","centroid","ol_coordinate","Feature","Vector","Image","ImageBase","ReprojImage","sourceProj","targetProj","targetExtent","targetResolution","getImageFunction","maxSourceExtent","maxTargetExtent","limitedTargetExtent","targetCenter","sourceResolution","reproj","errorThresholdInPixels","common","triangulation","Triangulation","sourceImage","calculateSourceExtent","ImageState","sourcePixelRatio","getPixelRatio","targetProj_","maxSourceExtent_","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","canvas_","sourceListenerKey_","disposeInternal","unlistenSource_","reproject_","sourceState","getResolution","image","load","ol_ImageBase","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","Source","ImageSource","resolutions_","reprojectedImage_","reprojectedRevision_","getResolutions","findNearestResolution","idx","ol_array","getRevision","getImageInternal","handleImageChange","source_Source","appendParams","uri","keyParams","k","encodeURIComponent","qs","source_ImageArcGISRest","ImageArcGISRest","crossOrigin_","url_","imageLoadFunction_","imageLoadFunction","params_","imageSize_","renderedRevision_","ratio_","ratio","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","ol_Image","getImageLoadFunction","srid","getCode","modifiedUrl","getUrl","setImageLoadFunction","updateParams","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvas","canvasElement","ImageCanvas","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","metersPerUnit_","metersPerUnit","useOverlay_","useOverlay","baseUrl","scale","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","Static","imageExtent","targetWidth","dom","setImage","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","axisOrientation","getAxisOrientation","substr","string","ATTRIBUTION","source_OSM","OSM","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","sharedContext","getImageData","prepareFrame","clearRect","composeFrame","createRenderer","source_Tile","layer_Tile","TileLayer","createTileRenderer","layer_Image","ImageLayer","createImageRenderer","LayerType","VECTOR","Raster","RasterSource","worker_","operationType_","operationType","threads_","threads","renderers_","sources","renderers","createRenderers","r","rr","tileQueue_","TileQueue","getLayer","requestedFrameState_","renderedImageCanvas_","frameState_","animate","ol_transform","focus","tileQueue","time","Date","now","usedTiles","viewHints","wantedTiles","operation","setOperation","lib","opt_lib","imageOps","updateFrameState_","allSourcesReady_","ready","renderedResolution","renderedExtent","processSources_","loadMoreTiles","imageDatas","imageData","process","onWorkerComplete_","output","putImageData","ATTRIBUTIONS","LayerConfig","terrain","extension","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","source_TileArcGISRest","TileArcGISRest","tmpExtent_","getKeyForParams_","tileExtent","getTilePixelRatio","getTileGrid","getTileGridForProjection","getTileCoordExtent","ol_size","getTileSize","tmpSize","TileDebug_LabeledTile","LabeledTile","tileSize_","strokeRect","ol_Tile","source_TileDebug","TileDebug","getTile","textTileCoord","getTileCoordForTileUrlFunction","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","bounds","minzoom","maxzoom","tiles","getAttributions","attributionExtent","source_TileWMS","TileWMS","transparent","tileClass","gutter_","gutter","getTileCoordForCoordAndResolution","tileResolution","getGutterInternal","UTFGrid_CustomTile","CustomTile","preemptive","src_","preemptive_","grid_","keys_","data_","jsonp_","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","getKey","handleError_","handleLoad_","json","grid","EMPTY","UTFGrid_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","urlTileCoord","tileUrl","source_UTFGrid","WMTSRequestEncoding","KVP","REST","TileGrid","WMTSTileGrid","origins","tileSizes","sizes","matrixIds_","matrixIds","getMatrixId","getMatrixIds","WMTS_WMTS","WMTS","requestEncoding","version_","format_","format","dimensions_","dimensions","layer_","matrixSet_","matrixSet","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","source_WMTS","TierSizeCalculation","DEFAULT","TRUNCATED","Zoomify_CustomTile","ImageTile","zoomifyImage_","ol_ImageTile","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tilegrid_common","tileSizeForTierSizeCalculation","reverse","tileCountUpToTier","tileCoordZ","tileCoordX","tileCoordY","tileIndex","TileGroup","ZoomifyTileClass","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","LRUCache","EventTarget","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","f","entry","value_","key_","newer","older","getKeys","getValues","values","peekLast","peekLastKey","peekFirstKey","setSize","prune","__WEBPACK_IMPORTED_MODULE_1__events_EventTarget_js__","__WEBPACK_IMPORTED_MODULE_3__source_State_js__","BaseObject","projection_","__WEBPACK_IMPORTED_MODULE_2__proj_js__","attributions_","adaptAttributions_","state_","wrapX_","attributionLike","__WEBPACK_IMPORTED_MODULE_1__Object_js__","__WEBPACK_IMPORTED_MODULE_0__functions_js__","CollectionEvent","opt_element","Collection","unique_","array_","assertUnique_","updateLength_","getLength","insertAt","elem","__WEBPACK_IMPORTED_MODULE_1__CollectionEventType_js__","removeAt","setAt","opt_except","__WEBPACK_IMPORTED_MODULE_0__AssertionError_js__","__WEBPACK_IMPORTED_MODULE_2__Object_js__","PRELOAD","USE_INTERIM_TILES_ON_ERROR","__WEBPACK_IMPORTED_MODULE_0__color_js__","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","hasListener","maxCacheSize","shared","AssertionError","message","PriorityQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","__WEBPACK_IMPORTED_MODULE_1__events_js__","getTilesLoading","__WEBPACK_IMPORTED_MODULE_0__TileState_js__","tileKey","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","dequeue","getFontFamilies","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","family","fontFamily","GeolocationProperty","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","ol_Geolocation","Geolocation","position_","watchId_","ol_events","ol_Object","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","Polygon","applyTransform","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","geodesic_line","interpolate","squaredTolerance","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","TextPlacement","Text_Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","textAlign_","textBaseline_","fill_","Fill","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","DEFAULT_STROKE_STYLE","INTERVALS","Graticule_Graticule","postcomposeListenerKey_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","addMeridian_","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","geom","point","clampedBottom","clampedTop","abs","setCoordinates","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","interval","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","p1","p2","delta","frac","meridian","setFlatCoordinates","GeometryLayout","LineString","getMeridians","lon2","parallel","getParallels","handlePostCompose_","line","labelData","vectorContext","updateProjectionInfo_","worldExtent","getWorldExtent","worldExtentP","render_EventType","POSTCOMPOSE","ol_Graticule","Kinetic","decay","minVelocity","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","firstIndex","getAngle","ol_Kinetic","pointer_EventType","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","POINTER_TYPES","msPointerDown","inEvent","pointerMap","pointerId","prepareEvent_","msPointerMove","move","msPointerUp","msPointerOut","leaveOut","msPointerOver","enterOver","msPointerCancel","cancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerType","cloneEvent","pointer_EventSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","originalEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","metaKey","button","relatedTarget","tiltX","tiltY","hwTimestamp","isPrimary","preventDefault","which","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","MouseSource","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","browserEvent","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","outEvent","cleanUpPointer_","lts","lastTouches","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","eventCopy","fireEvent","contains_","contained","contains","inType","wrapMouseEvent","prepareEvent","events_EventTarget","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","pointerEvent","newEvent","MapBrowserPointerEvent","MapBrowserEventType","SINGLECLICK","updateActivePointers_","handlePointerUp_","propagationStopped","isMouseActionButton_","handlePointerMove_","isMoving_","POINTERDRAG","dragging","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","none","disable","rotationconstraint_none","ViewProperty","DEFAULT_MIN_ZOOM","isNoopAnimation","animation","sourceCenter","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","properties","resolutionConstraintInfo","resolutionConstraint","zoomFactor","direction","power","createSnapToResolutions","Units","defaultMaxResolution","defaultMinResolution","log","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","tolerance","opt_tolerance","theta","createRotationConstraint","constraints_","constrainResolution","setProperties","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","setCenter","setZoom","series","complete","anchor","easing","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","jj","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","currentCenter","currentResolution","getSizeFromViewport_","selector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","SimpleGeometry","GeometryType","rotate","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","functions","setResolution","centerOn","opt_anchor","hint","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","Group","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","handleResize_","focus_","postRenderFunctions_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","CollectionEventType","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixel","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventPixel","viewportPosition","eventPosition","getTarget","getTargetElement","getOverlayById","getPixelFromCoordinate","getRenderer","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","opt_type","mapBrowserEvent","MapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","hints","reprioritize","targetElement","updateSize","handleViewPropertyChanged_","ObjectEventType","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","pixelResolution","setLayerGroup","setView","skipFeature","featureUid","computedStyle","offsetWidth","unskipFeature","control_Control","Control","target_","listenerKeys","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","handleToggle_","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","Rotate_render","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attributionOptions","stopEvent","delta_","interaction_Interaction","interaction_DoubleClickZoom","Interaction","DoubleClickZoom","handleDragEvent","targetPointers","Pointer","lastPointersCount_","kinetic_","lastCentroid","handleUpEvent","noKinetic_","angle","centerpx","dest","handleDownEvent","condition_","handlingDownUpSequence","interaction_DragPan","PointerInteraction","DragPan","stopDown","kinetic","events_condition","DragRotate_handleDragEvent","lastAngle_","DragRotate_handleUpEvent","DragRotate_handleDownEvent","interaction_DragRotate","DragRotate","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","ol_Disposable","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","defaultBoxEndCondition","minArea_","DragBox_handleDragEvent","box_","DragBox_handleUpEvent","boxEndCondition_","onBoxEnd_","DragBox_handleDownEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","DragBox","DragZoom","minArea","boxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","mapUnitsDelta","pixelDelta_","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","interaction_KeyboardZoom","KeyboardZoom","Mode","TRACKPAD","MouseWheelZoom_handleEvent","wheelEvent","useAnchor_","lastAnchor_","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","startTime_","mode_","trackpadEventGap_","trackpadTimeoutId_","decrementInteractingHint_","trackpadDeltaPerZoom_","rebound","trackpadZoomBuffer_","constrainResolution_","timeLeft","timeout_","timeoutId_","handleWheelZoom_","interaction_MouseWheelZoom","MouseWheelZoom","useAnchor","setMouseAnchor","PinchRotate_handleDragEvent","rotationDelta","touch0","touch1","rotationDelta_","rotating_","threshold_","anchor_","PinchRotate_handleUpEvent","PinchRotate_handleDownEvent","interaction_PinchRotate","PinchRotate","threshold","PinchZoom_handleDragEvent","scaleDelta","lastDistance_","lastScaleDelta_","PinchZoom_handleUpEvent","PinchZoom_handleDownEvent","interaction_PinchZoom","PinchZoom","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","stopPropagation","dropEffect","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","formatConstructor","tryReadFeatures_","featureProjection","registerListeners_","dropArea","setActive","unregisterListeners_","readFeatures","DragRotateAndZoom_handleDragEvent","magnitude","angleDelta","lastMagnitude_","DragRotateAndZoom_handleUpEvent","DragRotateAndZoom_handleDownEvent","DragRotateAndZoom","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","Extent_handleEvent","Extent_handleDownEvent","vertex","snapToVertex_","getOpposingPoint","x_","y_","pointerHandler_","getPointHandler","getEdgeHandler","setExtent","Extent_handleDragEvent","pixelCoordinate","createOrUpdatePointerFeature_","Extent_handleUpEvent","fixedPoint","fixedP1","fixedP2","ExtentInteraction","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","source_Vector","useSpatialIndex","boxStyle","Style","updateWhileAnimating","updateWhileInteracting","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","getSegments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdateExtentFeature_","extentFeature","setGeometry","addFeature","vertexFeature","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","compareIndexes","Modify_handleDownEvent","handlePointerAtPixel_","dragSegments_","modified_","insertVertices","vertexExtent","segmentDataMatches","rBush_","getInExtent","componentSegments","segmentDataMatch","segment","depth","closestVertex","closestOnSegmentData","insertVertexCondition_","vertexSegments_","willModifyFeatures_","insertVertex_","Modify_handleDragEvent","ignoreNextSingleClick_","dragSegment","segmentData","changingFeature_","setRadius","setGeometryCoordinates_","createOrUpdateVertexFeature_","Modify_handleUpEvent","centerSegmentData","featureSegments","circumferenceSegmentData","features_","Modify_handleEvent","lastPointerEvent_","deleteCondition_","handled","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getRadius","getClosestPoint","Modify","defaultDeleteCondition_","deleteCondition","insertVertexCondition","lastPixel_","RBush","overlay_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","LinearRing","writePolygonGeometry_","MultiPoint","writeMultiPointGeometry_","MultiLineString","writeMultiLineStringGeometry_","MultiPolygon","writeMultiPolygonGeometry_","Circle","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","VectorEventType","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","handleFeatureChange_","removeFeature_","removeFeatureSegmentData_","removeFeature","rBush","nodesToRemove","points","lines","rings","polygons","kk","box","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","newIndex","dragSegments","segmentsByFeature","deleted","forEachInExtent","SelectEventType","SELECT","SelectEvent","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureOverlay_","getFeaturesCollection","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","Snap_handleEvent","snapTo","snapped","Snap_handleUpEvent","featuresToUpdate","pendingFeatures_","updateFeature_","Snap","vertex_","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","lowerLeft","upperRight","isCircle","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate_handleDownEvent","lastFeature_","featuresAtPixel_","lastCoordinate_","handleMoveEvent","Translate_handleUpEvent","Translate_handleDragEvent","newCoordinate","translate","Translate","handleActiveChanged_","oldMap","updateState_","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ReplayGroup_ReplayGroup","getReplay","replayType","render_ReplayGroup","ReplayType","TEXT","drawTextOnPath","measure","startM","previousAngle","numChars","segmentM","segmentLength","chunk","chunkLength","char","charLength","charM","segmentPos","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","tmpTransform","Replay_CanvasReplay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","anchorX","anchorY","declutterGroup","originX","originY","snapToPixel","fillStroke","w","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","render_canvas","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","NaN","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","drawCustom","beginGeometry","replayEndss","replayBegin","myEnds","inflate","endGeometry","repeatSize","instruction","renderDeclutter_","groupCount","collides","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","flat_transform","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","flat_length","textLength","textStates","parts","cc","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","colorlike","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","render_VectorContext","finish","Replay","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","snapToPixel_","drawCoordinates_","pointGeometry","myBegin","multiPointGeometry","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lineStringGeometry","multiLineStringGeometry","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","polygonGeometry","multiPolygonGeometry","simplify","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Default","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","drawText","geometryType","flatEnd","flatOffset","oo","drawChars_","interiorPoints","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","addDeclutter","group","declutter","clip","flatClipCoords","getClipCoords","hasReplays","replays","candidates","zKey","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zs","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","save","replayTypes","restore","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","getZIndex","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","simplifiedGeometry","getSimplifiedGeometry","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","compose","vectorSource","getTransform","clipExtent","clipped","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","RENDER","drawWidth","drawHeight","drawSize","world","dispatchRenderEvent","mainContextAlpha","preCompose","postCompose","getVisible","handleStyleImageChange_","renderIfReadyAndVisible","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","styleFunction","getStyleFunction","forEachFeatureInExtent","canvas_Layer","mapRenderer","VectorLayer","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","zDirection","getRenderMode","VectorTileRenderType","createReplayGroup_","renderTileImage_","layerRevision","renderedTiles","renderMode","revision","renderOrder","replayState","getReplayState","renderedRevision","renderedRenderOrder","sourceTileGrid","zIndexKeys","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tmpExtent","tileProjection","reproject","getUnits","TILE_PIXELS","setWorldExtent","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentZ","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","getTilePixelSize","pixelScale","VECTOR_TILE","VectorTileLayer","ol_Map","Map","canvas_Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","setVisible","mapSize","updateRenderedPosition","getOptions","ol_VectorImageTile","VectorImageTile","sourceRevision","sourceTiles","loader_","replayState_","sourceTiles_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","getZForResolution","useLoadedOnly","loadCount","forEachTileCoord","sourceExtent","sourceTileKey","consumers","finishLoading_","interimTile","leftToLoad","errorSourceTiles","setLoader","loaded","empty","changeType","DEFAULT_EXTENT","ol_VectorTile","VectorTile","replayGroups_","tileLoadFunction_","onLoad","dataProjection","setFeatures","onError","loader","getChangeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","requestFullScreenWithKeys","handleFullScreenChange_","firstElementChild","OverviewMap_render","validateExtent_","updateBox_","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","LN2","ovresolution","bottomLeft","topRight","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","units","pointResolutionUnits","METERS","pointResolution","nominalCount","suffix","metersPerDegree","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","Shader_WebGLShader","isAnimated","Shader","Fragment","WebGLShader","WebGLFragment","webgl","Vertex","WebGLVertex","fragment","defaultshader_vertex","defaultshader_Locations","gl","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","webgl_Replay","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","vertices","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_TEST","getParameter","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","STATIC_DRAW","STREAM_DRAW","DYNAMIC_DRAW","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","CircleReplay","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","radius_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","CanvasGradient","CanvasPattern","defaultshader_fragment","texturereplay_defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","LOST","RESTORED","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","createEmptyTexture","texImage2D","RGBA","UNSIGNED_BYTE","Context","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","buf","bufferKey","bufferCacheEntry","buffer","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","key$2","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","TextureReplay","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","webgl_ImageReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","getImageSize","lineStringIsClosed","flat_area","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","LineStringReplay_Instruction","webgl_LineStringReplay","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","orient","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","DEPTH_TEST","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","structs_LinkedList","webgl_PolygonReplay","WebGLPolygonReplay","outerRing","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","isClockwise","extents","createPoint_","insertItem_","seg","ccw","s0","s1","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s2","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","intersections","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","flat_contains","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas_Atlas","space_","emptyBlocks_","renderCallback","split_","newBlock1","newBlock2","updateBlocks_","style_Atlas","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","hitImage","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","style_AtlasManager","TextReplay_WebGLTextReplay","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","textHeight","sum","curr","addCharToAtlas_","mCtx","measureText","getAtlas_","calculateHash_","HIT_DETECTION_SIZE","ReplayGroup_BATCH_CONSTRUCTORS","webgl_ReplayGroup","WebGLReplayGroup","replayHitDetection_","Uint8Array","readPixels","Immediate","WebGLImmediateRenderer","center_","size_","imageStyle_","fillStyle_","textStyle_","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","webgl_Layer","LayerRenderer","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","postRenderFunction","dispatchComposeEvent_","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","composeEvent","render_Event","renderer_Layer","ImageLayer_WebGLImageLayerRenderer","WebGLImageLayerRenderer","imageLayer","hitCanvasContext_","hitTransformationMatrix_","createTexture_","imageElement","viewCenter","imageSource","reproj_common","loadImage","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","webgl_ImageLayer","webgl_Map","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","failIfMajorPerformanceCaveat","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileGutter","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","renderer_Map","clearColor","viewport","hasFeature","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","TileLayer_WebGLTileLayerRenderer","WebGLTileLayerRenderer","tileLayer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","tmpSize_","createLoadedTileFinder","tileRange","forEachLoadedTile","framebufferExtent","tileSource","tilePixelSize","tilePixelResolution","getGutter","getTileRangeForExtentAndZ","equals","tileRangeSize","maxDimension","framebufferExtentDimension","tilesToDrawByZ","childTileRange","findLoadedTiles","useInterimTilesOnError","getUseInterimTilesOnError","allTilesLoaded","tmpTileRange","TileRange","getInterimTile","forEachTileCoordParentTileRange","getTileCoordChildTileRange","tilesToDraw","updateUsedTiles","tileTextureQueue","manageTilePyramid","getPreload","isKeyQueued","scheduleExpireCache","pixelOnMapScaled","pixelOnFrameBufferScaled","TILE","webgl_TileLayer","VectorLayer_WebGLVectorLayerRenderer","WebGLVectorLayerRenderer","layerState_","SCISSOR_TEST","scissor","webgl_VectorLayer","ol_WebGLMap","WebGLMap","__WEBPACK_IMPORTED_MODULE_3__events_Event_js__","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","__WEBPACK_IMPORTED_MODULE_2__functions_js__","__WEBPACK_IMPORTED_MODULE_0__Disposable_js__","eval","module","exports","fromString","HEX_COLOR_RE_","NAMED_COLOR_RE_","rgb","fromNamed","hasAlpha","fromStringInternal_","LINEAR_RING","geometryCollectionGeometry","opt_declutterGroup","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","disposed_","circle","coordinate1","coordinate2","coord1","coord2","squaredDistance","closestOnSegment","__WEBPACK_IMPORTED_MODULE_1__string_js__","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","IconAnchorUnits","FRACTION","PIXELS","IconImage_IconImage","IconImage","imageListenerKeys_","imageState_","tainting_","determineTainting_","dispatchChangeEvent_","events_EventType","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","imgData","IconOrigin","style_Icon","ImageStyle","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","ol_color","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","getHitDetectionImageSize","iconImageSize","BLUR","GRADIENT","RADIUS","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","setRenderOrder","handleRender_","createCircle_","getBlur","halfSize","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","VectorTile_VectorTileLayer","HYBRID","preload","setPreload","setUseInterimTilesOnError","TileProperty","opt_precision","numberString","toFixed","decimal","v1","v2","n1","n2","FormatType","ARRAY_BUFFER","XML","loadFeaturesXhr","success","failure","xhr","responseType","onload","responseXML","DOMParser","parseFromString","readProjection","getLastExtent","onerror","EXTENSIONS","ONE","SRC_ALPHA","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ELEMENT_ARRAY_BUFFER","CULL_FACE","BLEND","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","FRAGMENT_SHADER","VERTEX_SHADER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE0","CLAMP_TO_EDGE","CONTEXT_IDS","opt_attributes","MAX_TEXTURE_SIZE","DEBUG","getSupportedExtensions","simplifiedFlatCoordinates","simplifiedOffset","simplifiedEndss","simplifiedEnds","quantizeArray","douglasPeucker","markers","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","opt_dest","pointX","pointY","cumulativeLengths","extrapolate","lineStringCoordinateAtM","lo","hi","mid","m0","__WEBPACK_IMPORTED_MODULE_3__has_js__","altKeyOnly","altShiftKeysOnly","always","mouseActionButton","never","singleClick","__WEBPACK_IMPORTED_MODULE_0__MapBrowserEventType_js__","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","primaryAction","__WEBPACK_IMPORTED_MODULE_3__obj_js__","__WEBPACK_IMPORTED_MODULE_0__LayerType_js__","__WEBPACK_IMPORTED_MODULE_2__layer_TileProperty_js__","__WEBPACK_IMPORTED_MODULE_1__layer_Layer_js__","RegularShape","CircleStyle","atlasManager","atlasManager_","setOpacity","checksums_","hitDetectionCanvas_","radius1","radius2_","radius2","hitDetectionImageSize_","getPoints","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","angle0","radiusC","strokeChecksum","fillChecksum","checksum","defaultStyles","white","blue","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setZIndex","__WEBPACK_IMPORTED_MODULE_3__proj_js__","targetMetersPerUnit","sourceMetersPerUnit","__WEBPACK_IMPORTED_MODULE_1__extent_js__","compensationFactor","opt_renderEdges","__WEBPACK_IMPORTED_MODULE_0__dom_js__","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","__WEBPACK_IMPORTED_MODULE_2__math_js__","centroidX","centroidY","enlargeClipPoint","dX","dY","CHANGEFEATURE","opt_duration","__WEBPACK_IMPORTED_MODULE_1__easing_js__","rotateWithoutConstraints","zoomWithoutConstraints","__WEBPACK_IMPORTED_MODULE_3__math_js__","__WEBPACK_IMPORTED_MODULE_2__interaction_Property_js__","__WEBPACK_IMPORTED_MODULE_0__Object_js__","currentRotation","assertion","errorCode","measureContext","getMeasureContext","resetTransform","__WEBPACK_IMPORTED_MODULE_4__transform_js__","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","__WEBPACK_IMPORTED_MODULE_3__structs_LRUCache_js__","checkedFonts","textHeights","checkFont","referenceWidth","retries","checked","referenceFonts","isAvailable","available","referenceFont","check","done","__WEBPACK_IMPORTED_MODULE_2__obj_js__","clearInterval","fontSpec","fontFamilies","__WEBPACK_IMPORTED_MODULE_0__css_js__","setInterval","__WEBPACK_IMPORTED_MODULE_1__dom_js__","span","heights","measureTextHeight","__WEBPACK_IMPORTED_MODULE_1__layer_Property_js__","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","EXTENT","setMaxResolution","setMinResolution","zindex","isColorLike","__WEBPACK_IMPORTED_MODULE_8__tilegrid_js__","opaque_","tilePixelRatio_","__WEBPACK_IMPORTED_MODULE_1__TileCache_js__","tileOptions","expireCache","getTileCacheForProjection","covered","__WEBPACK_IMPORTED_MODULE_7__tilecoord_js__","__WEBPACK_IMPORTED_MODULE_2__TileState_js__","getOpaque","thisProj","__WEBPACK_IMPORTED_MODULE_4__proj_js__","__WEBPACK_IMPORTED_MODULE_5__size_js__","isGlobal","__WEBPACK_IMPORTED_MODULE_6__source_Source_js__","TileSourceEvent","POINTER_ID","POINTER_TYPE","mousedown","isEventSimulatedFromTouch_","mousemove","mouseup","cleanupMouse","mouseover","mouseout","pd","sx","sy","errorThreshold","sourceProj_","transformInvCache","transformInv","transformInv_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","__WEBPACK_IMPORTED_MODULE_0__extent_js__","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","__WEBPACK_IMPORTED_MODULE_4__events_EventType_js__","__WEBPACK_IMPORTED_MODULE_1__TileState_js__","getBlankImage","naturalWidth","naturalHeight","__WEBPACK_IMPORTED_MODULE_3__events_js__","__WEBPACK_IMPORTED_MODULE_0__Tile_js__","__WEBPACK_IMPORTED_MODULE_2__dom_js__","__WEBPACK_IMPORTED_MODULE_6__transform_js__","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","opt_closestPoint","intersectsCoordinate","computeExtent","opt_sy","intersectsExtent","destination","__WEBPACK_IMPORTED_MODULE_5__proj_Units_js__","inCoordinates","outCoordinates","pixelExtent","projectedExtent","__WEBPACK_IMPORTED_MODULE_3__geom_flat_transform_js__","swap","defaultCompare","compare","quickselectStep","sd","newLeft","newRight","__WEBPACK_IMPORTED_MODULE_4__math_js__","opt_layout","layout","__WEBPACK_IMPORTED_MODULE_1__geom_GeometryType_js__","setLayout","__WEBPACK_IMPORTED_MODULE_3__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_2__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_1__obj_js__","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","__WEBPACK_IMPORTED_MODULE_4__style_Style_js__","renderBuffer","declutter_","styleFunction_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","__WEBPACK_IMPORTED_MODULE_2__layer_VectorRenderType_js__","setDeclutter","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","__WEBPACK_IMPORTED_MODULE_7__transform_js__","topLeft","bottomRight","__WEBPACK_IMPORTED_MODULE_4__render_canvas_js__","opt_transform","__WEBPACK_IMPORTED_MODULE_5__render_canvas_Immediate_js__","__WEBPACK_IMPORTED_MODULE_2__render_Event_js__","forEachLayerAtCoordinate","__WEBPACK_IMPORTED_MODULE_1__functions_js__","__WEBPACK_IMPORTED_MODULE_3__render_EventType_js__","__WEBPACK_IMPORTED_MODULE_6__Layer_js__","simpleGeometry","__WEBPACK_IMPORTED_MODULE_4__geom_flat_transform_js__","__WEBPACK_IMPORTED_MODULE_5__obj_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","getFirstCoordinate","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStrideForLayout","nesting","getLayoutForStride","__WEBPACK_IMPORTED_MODULE_2__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_0__events_EventType_js__","loadingstrategy_all","VectorSourceEvent","opt_feature","Vector_VectorSource","featureloader","strategy_","strategy","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","length$2","modifyingCollection","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getAll","ol_obj","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","object","removeLoadedExtent","DEFAULT_TILE_SIZE","DEFAULT_MAX_ZOOM","ObjectEvent","Observable","opt_values","values_","getProperties","getChangeEventType","__WEBPACK_IMPORTED_MODULE_1__ObjectEventType_js__","opt_silent","unset","__WEBPACK_IMPORTED_MODULE_2__Observable_js__","changeEventTypeCache","__WEBPACK_IMPORTED_MODULE_0__events_EventTarget_js__","__WEBPACK_IMPORTED_MODULE_10__source_State_js__","layerRendererConstructors","CanvasMapRenderer","__WEBPACK_IMPORTED_MODULE_3__dom_js__","__WEBPACK_IMPORTED_MODULE_2__css_js__","__WEBPACK_IMPORTED_MODULE_0__transform_js__","__WEBPACK_IMPORTED_MODULE_8__render_canvas_Immediate_js__","__WEBPACK_IMPORTED_MODULE_5__render_Event_js__","__WEBPACK_IMPORTED_MODULE_6__render_EventType_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","__WEBPACK_IMPORTED_MODULE_9__Map_js__","__WEBPACK_IMPORTED_MODULE_7__render_canvas_js__","__WEBPACK_IMPORTED_MODULE_4__layer_Layer_js__","numLayers","ctor","hasImageData","ImageData","newImageData","createImageData","opt_maxEntries","rbush_","__WEBPACK_IMPORTED_MODULE_1_rbush___default","items_","search","forEach_","rbush","linearRingContainsXY","linearRingsContainsXY","wn","geom_LinearRing","maxDelta_","maxDeltaRevision_","closest","deflate","geom_SimpleGeometry","opt_n","opt_sphereRadius","sphere","Polygon_Polygon","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","opt_right","flatCenter","interiorpoint","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","intersectsextent","startAngle","__WEBPACK_IMPORTED_MODULE_1__ImageState_js__","opt_loader","error_","getError","__WEBPACK_IMPORTED_MODULE_0__ImageBase_js__","Circle_Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","geom_Circle","geom_MultiLineString","appendLineString","getCoordinateAtM","opt_extrapolate","opt_interpolate","flat_interpolate","getLineString","getLineStrings","lineStrings","midpoints","midpoint","geom_MultiPoint","appendPoint","getPoint","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","flatCenters","linearRingss","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","DrawEventType","DrawEvent","Draw_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","geometryName_","geometryName","freehandCondition_","freehand","freehandCondition","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","atFinish_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","startDrawing_","setGeometryName","sketchLineGeom","ring","addToDrawing_","finishDrawing","removeLastPoint","sketchFeature","abortDrawing_","sketchFeatures","overlaySource","pass","circleMode","transform1","transform2","multiply","tmp_","det","mat","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","arrayMaxSquaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","assignClosestPoint","tmpTileCoord","__WEBPACK_IMPORTED_MODULE_3__array_js__","origins_","tileSizes_","__WEBPACK_IMPORTED_MODULE_0__common_js__","fullTileRanges_","__WEBPACK_IMPORTED_MODULE_2__TileRange_js__","calculateTileRanges_","opt_tileRange","tileCoordExtent","getTileRangeExtent","__WEBPACK_IMPORTED_MODULE_6__size_js__","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","__WEBPACK_IMPORTED_MODULE_5__math_js__","fullTileRanges","pointerEvents","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","trackedPointers_","updateTrackedPointers_","__WEBPACK_IMPORTED_MODULE_1__MapBrowserEventType_js__","isPointerDraggingEvent","__WEBPACK_IMPORTED_MODULE_3__interaction_Interaction_js__","__WEBPACK_IMPORTED_MODULE_2__MapBrowserPointerEvent_js__","handledUp","setRotateWithView","setSnapToPixel","transition_","transitionStarts_","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","__WEBPACK_IMPORTED_MODULE_2__events_EventTarget_js__","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","destNode","createNode","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","goingUp","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","getKeyZXY","digits","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","flatMidpoint_","flatMidpointRevision_","appendCoordinate","__WEBPACK_IMPORTED_MODULE_5__geom_flat_closest_js__","forEachSegment","__WEBPACK_IMPORTED_MODULE_11__geom_flat_segments_js__","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_interpolate_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_inflate_js__","getCoordinateAt","__WEBPACK_IMPORTED_MODULE_10__geom_flat_length_js__","__WEBPACK_IMPORTED_MODULE_9__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_6__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_5__transform_js__","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","imageTransform","getImageTransform","dw","dh","__WEBPACK_IMPORTED_MODULE_3__functions_js__","__WEBPACK_IMPORTED_MODULE_0__coordinate_js__","__WEBPACK_IMPORTED_MODULE_4__canvas_Layer_js__","deflateCoordinates","deflateCoordinatesArray","coordinatess","coordinatesss","__WEBPACK_IMPORTED_MODULE_7__source_State_js__","handleImageChange_","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","opt_tileCallback","__WEBPACK_IMPORTED_MODULE_3__TileState_js__","__WEBPACK_IMPORTED_MODULE_6__functions_js__","__WEBPACK_IMPORTED_MODULE_1__color_js__","opt_dragging","__WEBPACK_IMPORTED_MODULE_5__style_Style_js__","opt_geometryOrProperties","id_","geometryChangeKey_","handleGeometryChanged_","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","getGeometryName","handleGeometryChange_","setId","revision_","un","containsTileRange","maxRow","maxEl","absValue","coef","angleInRadians","angleInDegrees","cosh","intersectsLineString","intersectsLinearRingArray","__WEBPACK_IMPORTED_MODULE_2__flat_segments_js__","coordinatesExtent","point1","point2","__WEBPACK_IMPORTED_MODULE_1__flat_contains_js__","intersectsLinearRing","linearRingIsClockwise","linearRingIsOriented","orientLinearRings","opt_noContext","__WEBPACK_IMPORTED_MODULE_5__dom_js__","oversampling_","newTiles_","__WEBPACK_IMPORTED_MODULE_6__extent_js__","tmpTileRange_","imageTransform_","isDrawableTile_","oversampling","animatingOrInteracting","__WEBPACK_IMPORTED_MODULE_4__ViewHint_js__","currentScale","currentTilePixelSize","drawTileImage","alphaChanged","__WEBPACK_IMPORTED_MODULE_7__canvas_IntermediateCanvas_js__","__WEBPACK_IMPORTED_MODULE_1__LayerType_js__","__WEBPACK_IMPORTED_MODULE_1__tilecoord_js__","TileCache","__WEBPACK_IMPORTED_MODULE_0__structs_LRUCache_js__","Processor","assign","var_sources","TypeError","ImageWrapper","getInteriorPointOfArray","flatCentersOffset","maxSegmentLength","METERS_PER_UNIT","FEET","USFEET","opt_width","opt_height","marginLeft","marginRight","marginTop","marginBottom","oldNode","replaceChild","lastChild","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","opt_coordinatesss","__WEBPACK_IMPORTED_MODULE_10__transform_js__","CanvasImageLayerRenderer","skippedFeatures_","vectorRenderer_","__WEBPACK_IMPORTED_MODULE_2__LayerType_js__","__WEBPACK_IMPORTED_MODULE_8__Map_js__","vectorRenderer","__WEBPACK_IMPORTED_MODULE_5__extent_js__","__WEBPACK_IMPORTED_MODULE_3__ViewHint_js__","__WEBPACK_IMPORTED_MODULE_0__reproj_common_js__","skippedFeatures","imageFrameState","__WEBPACK_IMPORTED_MODULE_7__obj_js__","newSkippedFeatures","__WEBPACK_IMPORTED_MODULE_1__ImageCanvas_js__","__WEBPACK_IMPORTED_MODULE_4__array_js__","imagePixelRatio","__WEBPACK_IMPORTED_MODULE_9__IntermediateCanvas_js__","__WEBPACK_IMPORTED_MODULE_6__layer_VectorRenderType_js__","num","createMinion","workerHasImageData","newWorkerImageData","buffers","numBuffers","numBytes","byteLength","Uint8ClampedArray","arrays","pixels","createWorker","onMessage","blob","Blob","URL","createObjectURL","worker","Worker","_imageOps","workers","_onWorkerMessage","minion","createFauxWorker","_workers","_queue","_maxQueueLength","_running","_dataLookup","_job","inputs","_enqueue","_dispatch","_destroyed","job","input","slices","_resolveJob","Projection_Projection","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","setGlobal","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","HALF_SIZE","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections2","forwardTransform","inverseTransform","transforms_add","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","proj_get","projectionLike","addEquivalentProjections","projections","addProjections","getTransformFromProjections","destinationProjection","transformFunc","transforms_get","proj_transform","opt_units","toEPSG4326","defaultCode","projection1","projection2","equalUnits","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceRange","srcX","srcY","unlistenSources_","sourceListenKey","TileImage_TileImage","defaultTileLoadFunction","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","ol_proj","projKey","ol_tilegrid","createTile_","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","source_UrlTile","imageTile","numberSafeCompareFunction","haystack","needle","opt_comparator","cmp","comparator","low","high","arr1","arr2","len1","compareFnc","opt_func","opt_strict","currentVal"],"mappings":"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","file":"static/js/vendor.917d68a511ab59a2ec6e.js","sourcesContent":["/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapEvent.js\n// module id = +34y\n// module chunks = 0","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/extent/Relationship.js\n// module id = +Ggc\n// module chunks = 0","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageSnapToPixel_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (this$1.imageSnapToPixel_) {\n        x = Math.round(x);\n        y = Math.round(y);\n      }\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/Immediate.js\n// module id = +Iu9\n// module chunks = 0","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors () {\n    return this.layerRendererConstructors_;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/Map.js\n// module id = +Z7m\n// module chunks = 0","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/area.js\n// module id = +b92\n// module chunks = 0","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires module:ol/render/Event~RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        layerState.zIndex = Infinity;\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Layer.js\n// module id = +iwx\n// module chunks = 0","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/extent.js\n// module id = /LWt\n// module chunks = 0","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Stroke.js\n// module id = 00zS\n// module chunks = 0","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/common.js\n// module id = 09IN\n// module chunks = 0","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires module:ol/source/TileEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array.<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array.<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array.<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/UrlTile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Group.js\n// module id = 0uY1\n// module chunks = 0","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/sphere.js\n// module id = 1avf\n// module chunks = 0","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/easing.js\n// module id = 2S6f\n// module chunks = 0","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageState.js\n// module id = 3Jqb\n// module chunks = 0","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ViewHint.js\n// module id = 3Q3L\n// module chunks = 0","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/length.js\n// module id = 3ahG\n// module chunks = 0","/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.1.3';\n\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/util.js\n// module id = 3ciB\n// module chunks = 0","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/has.js\n// module id = 4acs\n// module chunks = 0","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/EventType.js\n// module id = 57Gy\n// module chunks = 0","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/GeometryLayout.js\n// module id = 5MGX\n// module chunks = 0","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Property.js\n// module id = 6Bfc\n// module chunks = 0","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/EventSource.js\n// module id = 6KZ5\n// module chunks = 0","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  for (var type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n\n//# sourceMappingURL=events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events.js\n// module id = 6t+W\n// module chunks = 0","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tileurlfunction.js\n// module id = 796y\n// module chunks = 0","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/extent/Corner.js\n// module id = 7XOM\n// module chunks = 0","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  var options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid.js\n// module id = 7yEG\n// module chunks = 0","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/net.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = (function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {module:ol/proj/Projection} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var zoom = frameState.viewState.zoom;\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/BingMaps.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = (function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = (function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      state: SourceState.LOADING,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object.<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\n//# sourceMappingURL=CartoDB.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/CartoDB.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = (function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array.<module:ol/Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {module:ol/geom/Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n      assert(geometry instanceof Point,\n        10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {module:ol/source/Vector} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    var this$1 = this;\n\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object.<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature).toString() in clustered)) {\n        var geometry = this$1.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this$1.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor).toString();\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this$1.features.push(this$1.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array.<module:ol/Feature>} features Features\n   * @return {module:ol/Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var this$1 = this;\n\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this$1.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\n//# sourceMappingURL=Cluster.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Cluster.js\n// module id = null\n// module chunks = ","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = (function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {module:ol/ImageBase}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\n\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = (function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {module:ol/Image}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @api\n */\nvar ImageSource = (function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {module:ol/reproj/Image}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array.<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {};\n\n  /**\n   * Handle image change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/uri.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object.<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array.<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = (function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || {};\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\n//# sourceMappingURL=ImageArcGISRest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageArcGISRest.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from '../source/Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {module:ol/source/State} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = (function (ImageSource) {\n  function ImageCanvasSource(options) {\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {module:ol/source/ImageCanvas~FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {module:ol/ImageCanvas}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_(\n      extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\n//# sourceMappingURL=ImageCanvas.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageCanvas.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = (function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object.<string, string|number>} params Request parameters.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\n//# sourceMappingURL=ImageMapGuide.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageMapGuide.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = (function (ImageSource) {\n  function Static(options) {\n    var imageExtent = options.imageExtent;\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = new ImageWrapper(imageExtent, undefined, 1, options.url, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\n//# sourceMappingURL=ImageStatic.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageStatic.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/WMSServerType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = (function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || {};\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/common.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = (function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nvar RasterSource = (function (ImageSource) {\n  function RasterSource(options) {\n    var this$1 = this;\n\n    ImageSource.call(this, {});\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Raster~RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/canvas/Layer>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this$1.renderers_[r], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\n    var layerStates = {};\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {module:ol/PluggableMap~FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {module:ol/ImageCanvas}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {module:ol/View~State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {module:ol/source/Raster~Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {module:ol/extent~Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {module:ol/proj/Projection} projection The view projection.\n   * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var this$1 = this;\n\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this$1.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var this$1 = this;\n\n    var frameState = this.requestedFrameState_;\n    var len = this.renderers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(\n        this$1.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  var len = sources.length;\n  var renderers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  var renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  var layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  var layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n\n//# sourceMappingURL=Raster.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Raster.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = (function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Stamen.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object.<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array.<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = (function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || {};\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.fixedTileUrlFunction = function fixedTileUrlFunction (tileCoord, pixelRatio, projection) {\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileExtent = tileGrid.getTileCoordExtent(\n      tileCoord, this.tmpExtent_);\n    var tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    var baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileArcGISRest.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = (function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {module:ol/size~Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = (function (TileSource) {\n  function TileDebug(options) {\n\n    TileSource.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(TileSource));\n\n\nexport default TileDebug;\n\n//# sourceMappingURL=TileDebug.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileDebug.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = (function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {TileJSON}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {TileJSON} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON.bounds !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    var minZoom = tileJSON.minzoom || 0;\n    var maxZoom = tileJSON.maxzoom || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n    if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array.<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = (function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || {};\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutterInternal = function getGutterInternal () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.fixedTileUrlFunction = function fixedTileUrlFunction (tileCoord, pixelRatio, projection) {\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\nexport var CustomTile = (function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object.<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * Get the image element for this tile.\n * @return {HTMLImageElement} Image.\n */\nCustomTile.prototype.getImage = function() {\n  return null;\n};\n\n\n/**\n * Synchronously returns data at given coordinate (if available).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {*} The data.\n */\nCustomTile.prototype.getData = function(coordinate) {\n  if (!this.grid_ || !this.keys_) {\n    return null;\n  }\n  var xRelative = (coordinate[0] - this.extent_[0]) /\n      (this.extent_[2] - this.extent_[0]);\n  var yRelative = (coordinate[1] - this.extent_[1]) /\n      (this.extent_[3] - this.extent_[1]);\n\n  var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n  if (typeof row !== 'string') {\n    return null;\n  }\n\n  var code = row.charCodeAt(Math.floor(xRelative * row.length));\n  if (code >= 93) {\n    code--;\n  }\n  if (code >= 35) {\n    code--;\n  }\n  code -= 32;\n\n  var data = null;\n  if (code in this.keys_) {\n    var id = this.keys_[code];\n    if (this.data_ && id in this.data_) {\n      data = this.data_[id];\n    } else {\n      data = id;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate (or `null` if not yet loaded).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(this: T, *)} callback Callback.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @template T\n */\nCustomTile.prototype.forDataAtCoordinate = function(coordinate, callback, opt_this, opt_request) {\n  if (this.state == TileState.IDLE && opt_request === true) {\n    listenOnce(this, EventType.CHANGE, function(e) {\n      callback.call(opt_this, this.getData(coordinate));\n    }, this);\n    this.loadInternal_();\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback.call(opt_this, this.getData(coordinate));\n      }.bind(this), 0);\n    } else {\n      callback.call(opt_this, this.getData(coordinate));\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.handleError_ = function() {\n  this.state = TileState.ERROR;\n  this.changed();\n};\n\n\n/**\n * @param {!UTFGridJSON} json UTFGrid data.\n * @private\n */\nCustomTile.prototype.handleLoad_ = function(json) {\n  this.grid_ = json.grid;\n  this.keys_ = json.keys;\n  this.data_ = json.data;\n\n  this.state = TileState.EMPTY;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.loadInternal_ = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    if (this.jsonp_) {\n      requestJSONP(this.src_, this.handleLoad_.bind(this),\n        this.handleError_.bind(this));\n    } else {\n      var client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', this.src_);\n      client.send();\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nCustomTile.prototype.onXHRLoad_ = function(event) {\n  var client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    var response;\n    try {\n      response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleError_();\n      return;\n    }\n    this.handleLoad_(response);\n  } else {\n    this.handleError_();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nCustomTile.prototype.onXHRError_ = function(event) {\n  this.handleError_();\n};\n\n\n/**\n * @override\n */\nCustomTile.prototype.load = function() {\n  if (this.preemptive_) {\n    this.loadInternal_();\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = (function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n  return UTFGrid;\n}(TileSource));\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nUTFGrid.prototype.onXHRLoad_ = function(event) {\n  var client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    var response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nUTFGrid.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * Return the template from TileJSON.\n * @return {string|undefined} The template from TileJSON.\n * @api\n */\nUTFGrid.prototype.getTemplate = function() {\n  return this.template_;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate and resolution (or `null` if not yet loaded or\n * in case of an error).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {function(*)} callback Callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @api\n */\nUTFGrid.prototype.forDataAtCoordinateAndResolution = function(\n  coordinate, resolution, callback, opt_request) {\n  if (this.tileGrid) {\n    var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n      coordinate, resolution);\n    var tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n      tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n    tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback(null);\n      }, 0);\n    } else {\n      callback(null);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nUTFGrid.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nUTFGrid.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var sourceProjection = this.getProjection();\n  var extent;\n  if (tileJSON.bounds !== undefined) {\n    var transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  var minZoom = tileJSON.minzoom || 0;\n  var maxZoom = tileJSON.maxzoom || 22;\n  var tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.template_ = tileJSON.template;\n\n  var grids = tileJSON.grids;\n  if (!grids) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n  if (tileJSON.attribution !== undefined) {\n    var attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n  }\n\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  var tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    var tileCoord = [z, x, y];\n    var urlTileCoord =\n        this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    var tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.useTile = function(z, x, y) {\n  var tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\n\n\nexport default UTFGrid;\n\n//# sourceMappingURL=UTFGrid.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/UTFGrid.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/WMTSRequestEncoding.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array.<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array.<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array.<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = (function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array.<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array.<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  var resolutions = [];\n  /** @type {!Array.<string>} */\n  var matrixIds = [];\n  /** @type {!Array.<module:ol/coordinate~Coordinate>} */\n  var origins = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  var tileSizes = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid/WMTS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array.<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = (function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {module:ol/source/WMTSRequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  return WMTS;\n}(TileImage));\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\nWMTS.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  var key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\nWMTS.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\nWMTS.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\nWMTS.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\nWMTS.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n * @api\n */\nWMTS.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\nWMTS.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\nWMTS.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\nWMTS.prototype.getKeyForDimensions_ = function() {\n  var this$1 = this;\n\n  var i = 0;\n  var res = [];\n  for (var key in this$1.dimensions_) {\n    res[i++] = key + '-' + this$1.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\nWMTS.prototype.updateDimensions = function(dimensions) {\n  assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n * @this {module:ol/source/WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = this.tileGrid;\n\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, this.dimensions_);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n\nexport default WMTS;\n\n//# sourceMappingURL=WMTS.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/WMTS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = (function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getImage = function() {\n  if (this.zoomifyImage_) {\n    return this.zoomifyImage_;\n  }\n  var image = ImageTile.prototype.getImage.call(this);\n  if (this.state == TileState.LOADED) {\n    var tileSize = this.tileSize_;\n    if (image.width == tileSize[0] && image.height == tileSize[1]) {\n      this.zoomifyImage_ = image;\n      return image;\n    } else {\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n      context.drawImage(image, 0, 0);\n      this.zoomifyImage_ = context.canvas;\n      return context.canvas;\n    }\n  } else {\n    return image;\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {module:ol/size~Size} [size] Size of the image.\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = (function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {module:ol/Tile~UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = -tileCoord[2] - 1;\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\n//# sourceMappingURL=Zoomify.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Zoomify.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n//# sourceMappingURL=source.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/State.js\n// module id = 9Ewl\n// module chunks = 0","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array.<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array.<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/structs/LRUCache.js\n// module id = 9JMd\n// module chunks = 0","/**\n * @module ol/source/Source\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  Source.prototype.adaptAttributions_ = function adaptAttributions_ (attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  };\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n  * @abstract\n  * @return {Array.<number>|undefined} Resolutions.\n  */\n  Source.prototype.getResolutions = function getResolutions () {};\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  };\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Source.js\n// module id = A7Qc\n// module chunks = 0","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array.<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array.<T>} arr Array.\n   * @return {module:ol/Collection.<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array.<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array.<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Collection.js\n// module id = A90D\n// module chunks = 0","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/TileProperty.js\n// module id = AHof\n// module chunks = 0","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object.<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconImageCache.js\n// module id = AMn6\n// module chunks = 0","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/AssertionError.js\n// module id = AU1m\n// module chunks = 0","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileQueue.js\n// module id = At0H\n// module chunks = 0","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/css.js\n// module id = CTDj\n// module chunks = 0","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n//# sourceMappingURL=GeolocationProperty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/GeolocationProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Geolocation\n */\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = (function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/proj~TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(GeolocationProperty.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(GeolocationProperty.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n    this.set(GeolocationProperty.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(GeolocationProperty.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(GeolocationProperty.POSITION, projectedPosition);\n    this.set(GeolocationProperty.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    error.type = EventType.ERROR;\n    this.setTracking(false);\n    this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {module:ol/proj/Projection|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(GeolocationProperty.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\n//# sourceMappingURL=Geolocation.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Geolocation.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n\n  var geoA = interpolate(0);\n  var geoB = interpolate(1);\n\n  var a = transform(geoA);\n  var b = transform(geoB);\n\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  var geoStack = [geoB, geoA];\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  var stack = [b, a];\n  /** @type {Array.<number>} */\n  var fractionStack = [1, 0];\n\n  /** @type {!Object.<string, boolean>} */\n  var fractions = {};\n\n  var maxIterations = 1e5;\n  var geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  var geoProjection = getProjection('EPSG:4326');\n\n  var cosLat1 = Math.cos(toRadians(lat1));\n  var sinLat1 = Math.sin(toRadians(lat1));\n  var cosLat2 = Math.cos(toRadians(lat2));\n  var sinLat2 = Math.sin(toRadians(lat2));\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      var D = frac * Math.acos(d);\n      var cosD = Math.cos(D);\n      var sinD = Math.sin(D);\n      var y = sinDeltaLon * cosLat2;\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      var theta = Math.atan2(y, x);\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n//# sourceMappingURL=geodesic.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/geodesic.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/TextPlacement.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {module:ol/style/TextPlacement|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array.<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {module:ol/style/Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {module:ol/style/TextPlacement|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array.<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {module:ol/style/TextPlacement|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array.<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Text.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array.<number>}\n * @private\n */\nvar INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nvar Graticule = function Graticule(opt_options) {\n  var options = opt_options || {};\n\n  /**\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {module:ol/style/Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\n  var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      var textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Meridian\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  var lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  var coordinate = [flatCoordinates[0], lat];\n  var point;\n  if (index in this.meridiansLabels_) {\n    point = this.meridiansLabels_[index];\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\n  var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      var textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Parallels.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  var lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  var coordinate = [lon, flatCoordinates[1]];\n  var point;\n  if (index in this.parallelsLabels_) {\n    point = this.parallelsLabels_[index];\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\n    var this$1 = this;\n\n\n  var interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  var centerLonLat = this.toLonLatTransform_(center);\n  var centerLon = centerLonLat[0];\n  var centerLat = centerLonLat[1];\n  var maxLines = this.maxLines_;\n  var cnt, idx, lat, lon;\n\n  var validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  var maxLat = validExtent[3];\n  var maxLon = validExtent[2];\n  var minLat = validExtent[1];\n  var minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this$1.minLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this$1.maxLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this$1.minLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this$1.maxLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function getInterval_ (resolution) {\n    var this$1 = this;\n\n  var centerLon = this.projectionCenterLonLat_[0];\n  var centerLat = this.projectionCenterLonLat_[1];\n  var interval = -1;\n  var target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array.<number>} **/\n  var p1 = [];\n  /** @type {Array.<number>} **/\n  var p2 = [];\n  for (var i = 0, ii = INTERVALS.length; i < ii; ++i) {\n    var delta = INTERVALS[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this$1.fromLonLatTransform_(p1, p1);\n    this$1.fromLonLatTransform_(p2, p2);\n    var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = INTERVALS[i];\n  }\n  return interval;\n};\n\n/**\n * Get the map associated with this graticule.\n * @return {module:ol/PluggableMap} The map.\n * @api\n */\nGraticule.prototype.getMap = function getMap () {\n  return this.map_;\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\n  var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  var lineString = this.meridians_[index];\n  if (!lineString) {\n    lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of meridians.Meridians are lines of equal longitude.\n * @return {Array.<module:ol/geom/LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function getMeridians () {\n  return this.meridians_;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\n  var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  var lineString = this.parallels_[index];\n  if (!lineString) {\n    lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of parallels.Parallels are lines of equal latitude.\n * @return {Array.<module:ol/geom/LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function getParallels () {\n  return this.parallels_;\n};\n\n/**\n * @param {module:ol/render/Event} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function handlePostCompose_ (e) {\n    var this$1 = this;\n\n  var vectorContext = e.vectorContext;\n  var frameState = e.frameState;\n  var extent = frameState.extent;\n  var viewState = frameState.viewState;\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  var updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  var i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this$1.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this$1.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  var labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this$1.meridiansLabels_[i];\n      this$1.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this$1.parallelsLabels_[i];\n      this$1.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var worldExtent = projection.getWorldExtent();\n  var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n/**\n * Set the map for this graticule.The graticule will be rendered on the\n * provided map.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nGraticule.prototype.setMap = function setMap (map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\n\nexport default Graticule;\n\n//# sourceMappingURL=Graticule.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Graticule.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Kinetic.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/EventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/MsSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/NativeSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( Event ) PointerEvent.__proto__ = Event;\n  PointerEvent.prototype = Object.create( Event && Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  PointerEvent.prototype.getButtons_ = function getButtons_ (eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  };\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  PointerEvent.prototype.getPressure_ = function getPressure_ (eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  };\n\n  return PointerEvent;\n}(Event));\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/PointerEvent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = keys[i];\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/TouchSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object.<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/PointerEventHandler.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object.<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserEventHandler.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/centerconstraint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/rotationconstraint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ViewProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object.<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array.<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {module:ol/View~AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        series[0].callback(false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          setTimeout(function() {\n            callback(true);\n          }, 0);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array.<number>=} opt_hints Destination array.\n   * @return {Array.<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array.<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @return {module:ol/View~State} View state.\n   */\n  View.prototype.getState = function getState () {\n    var center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: center.slice(),\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    var geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : UNDEFINED;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      setTimeout(callback.bind(undefined, true), 0);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/View.js\n// module id = null\n// module chunks = ","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/resolutionconstraint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('DIV');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('DIV');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('DIV');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection.<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object.<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {module:ol/Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState();\n      var focus = this.focus_;\n      if (!focus) {\n        focus = viewState.center;\n        var pixelResolution = viewState.resolution / this.pixelRatio_;\n        focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n        focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n      }\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: focus,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n//# sourceMappingURL=PluggableMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/PluggableMap.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Control\n */\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : UNDEFINED;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== UNDEFINED) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Control.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('UL');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array.<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.getSourceAttributions_ = function getSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object.<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array.<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.getSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('LI');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Attribution.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Rotate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Zoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/util.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DoubleClickZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  return DragPan;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var targetPointers = this.targetPointers;\n  var centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragPan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  return DragRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragRotate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/Box.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : UNDEFINED;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragBox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!module:ol/View} */ (map.getView());\n  var size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/KeyCode.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/KeyboardPan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/KeyboardZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/MouseWheelZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  return PinchRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/PinchRotate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  return PinchZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/PinchZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = (function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array.<module:ol/Feature>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {module:ol/proj/Projection|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n */\nvar DragAndDrop = (function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array.<function(new: module:ol/format/Feature)>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var this$1 = this;\n\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      /**\n       * Avoid \"cannot instantiate abstract class\" error.\n       * @type {Function}\n       */\n      var formatConstructor = formatConstructors[i];\n      /**\n       * @type {module:ol/format/Feature}\n       */\n      var format = new formatConstructor();\n      features = this$1.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {module:ol/format/Feature} format Format.\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions} options Read options.\n   * @private\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  var this$1 = this;\n\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this$1.handleResult_.bind(this$1, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragAndDrop.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var deltaX = offset[0] - size[0] / 2;\n  var deltaY = size[1] / 2 - offset[1];\n  var theta = Math.atan2(deltaY, deltaX);\n  var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  var view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    var angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragRotateAndZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = (function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/Extent~Event\n * @api\n */\nvar ExtentInteraction = (function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * Extent of the drawn box\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel cursor location\n   * @param {module:ol/PluggableMap} map map\n   * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent extent\n   * @returns {module:ol/Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} vertex location of feature\n   * @returns {module:ol/Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {module:ol/extent~Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  var pixel = mapBrowserEvent.pixel;\n  var map = mapBrowserEvent.map;\n\n  var extent = this.getExtent();\n  var vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  var getOpposingPoint = function(point) {\n    var x_ = null;\n    var y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    var pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  var extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Extent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = (function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nvar Modify = (function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {module:ol/MapBrowserPointerEvent}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {module:ol/Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this$1.SEGMENT_WRITERS_[geometries[i].getType()].call(this$1, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @return {module:ol/Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/PluggableMap} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var this$1 = this;\n\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this$1.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this$1.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this$1.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this$1.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this$1.vertexFeature_) {\n          this$1.overlay_.getSource().removeFeature(this$1.vertexFeature_);\n          this$1.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array.<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  var this$1 = this;\n\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  var vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    var insertVertices = [];\n    var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    var vertex = geometry.getCoordinates();\n    var vertexExtent = boundingExtent([vertex]);\n    var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    var componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      var segmentDataMatch = segmentDataMatches[i];\n      var segment = segmentDataMatch.segment;\n      var uid = getUid(segmentDataMatch.feature);\n      var depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this$1.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this$1.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this$1.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this$1.insertVertexCondition_(evt) && getUid(segment) in this$1.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (var j = insertVertices.length - 1; j >= 0; --j) {\n      this$1.insertVertex_.apply(this$1, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  var this$1 = this;\n\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  var vertex = evt.coordinate;\n  for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    var dragSegment = this$1.dragSegments_[i];\n    var segmentData = dragSegment[0];\n    var depth = segmentData.depth;\n    var geometry = segmentData.geometry;\n    var coordinates = (void 0);\n    var segment = segmentData.segment;\n    var index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this$1.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this$1.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this$1.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this$1.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this$1.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  var this$1 = this;\n\n  for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n    var segmentData = this$1.dragSegments_[i][0];\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      var coordinates = geometry.getCenter();\n      var centerSegmentData = segmentData.featureSegments[0];\n      var circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this$1.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this$1.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this$1.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  var handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    var key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    var key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    var key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.featureOverlay_.getSource().getFeaturesCollection();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Select.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = (function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object.<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object.<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object.<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n    );\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this$1.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this$1, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  var featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Snap.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  var elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/ReplayGroup.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/ReplayType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/textpath.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/Instruction.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/replay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array.<number>} padding Padding.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array.<*>} */ (fillInstruction),\n          /** @type {Array.<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array.<number>} dashArray Dash array.\n   * @return {Array.<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array.<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array.<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array.<*>} instructions Instructions array.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n   *     featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var snapToPixel = /** @type {boolean} */ (instruction[14]);\n          var width = /** @type {number} */ (instruction[15]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array.<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = /** @type {module:ol~render} */ (this$1).textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array.<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array.<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/Replay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.snapToPixel_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.snapToPixel_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.snapToPixel_ = imageStyle.getSnapToPixel();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/ImageReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/LineStringReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/PolygonReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/straightchunk.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object.<string, Object.<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, true, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, true, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/TextReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array.<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/ReplayGroup.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/vector.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object.<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/VectorLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = this.getLayer();\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      var renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var zIndexKeys = {};\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      for (var r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object.<string, boolean>} */\n    var features = {};\n\n    /** @type {Array.<module:ol/VectorImageTile>} */\n    var renderedTiles = this.renderedTiles;\n\n    var bufferedExtent, found;\n    var i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/VectorTileLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Map.js\n// module id = null\n// module chunks = ","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/OverlayPositioning.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = (function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('DIV');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {module:ol/PluggableMap|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array.<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {module:ol/OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {module:ol/PluggableMap|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array.<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {module:ol/size~Size|undefined} size The size of the element.\n   * @return {module:ol/extent~Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {module:ol/OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel The pixel location.\n   * @param {module:ol/size~Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {module:ol/Overlay~Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Overlay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {UNDEFINED} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nvar VectorImageTile = (function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n    var this$1 = this;\n\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object.<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/VectorTile>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array.<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var resolution = tileGrid.getResolution(zoom);\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var useLoadedOnly = zoom != tileCoord[0];\n      var loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        var sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          var sourceTileKey = sourceTileCoord.toString();\n          var sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, UNDEFINED, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this$1.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      var sourceTileKey = this$1.tileKeys[i];\n      var sourceTile = this$1.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this$1.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorImageTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer).toString();\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorImageTile.prototype.getImage = function getImage (layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n   */\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer).toString();\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.getKey = function getKey () {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  };\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {module:ol/VectorTile} Source tile.\n   */\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\n    return this.sourceTiles_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.load = function load () {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    var leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    var errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        var sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\n            var state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              var uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  };\n\n  /**\n   * @private\n   */\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\n    var this$1 = this;\n\n    var loaded = this.tileKeys.length;\n    var empty = 0;\n    for (var i = loaded - 1; i >= 0; --i) {\n      var state = this$1.getTile(this$1.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  };\n\n  return VectorImageTile;\n}(Tile));\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\n//# sourceMappingURL=VectorImageTile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/VectorImageTile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar VectorTile = (function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/Feature>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/render/ReplayGroup>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {module:ol/extent~Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {module:ol/format/Feature} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {module:ol/proj/Projection} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @return {module:ol/render/ReplayGroup} Replay group.\n   */\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array.<module:ol/Feature>} features The loaded features.\n   * @param {module:ol/proj/Projection} dataProjection Data projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {module:ol/extent~Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {module:ol/proj/Projection} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n   */\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/VectorTile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/FullScreen\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = (function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    var button = document.createElement('button');\n    button.className = this.cssClassName_ + '-' + isFullScreen();\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.labelNode_);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var button = this.element.firstElementChild;\n    var map = this.getMap();\n    if (isFullScreen()) {\n      button.className = this.cssClassName_ + '-true';\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      button.className = this.cssClassName_ + '-false';\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/FullScreen.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = (function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('DIV');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {module:ol/Map}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(\n        /**\n         * @param {module:ol/layer/Layer} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('DIV');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {module:ol/Overlay}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {module:ol/View} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {module:ol/PluggableMap} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/OverviewMap.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = (function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('DIV'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('DIV');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?module:ol/View~State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n        Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {module:ol/control/ScaleLine~Units|undefined} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return (\n      /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n    );\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var this$1 = this;\n\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this$1.element.style.display = 'none';\n        this$1.renderedVisible_ = false;\n        return;\n      } else if (width >= this$1.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/ScaleLine.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = (function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {module:ol/size~Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {module:ol/pointer/PointerEvent} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n      var deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/ZoomSlider.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = (function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/ZoomToExtent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @abstract\n */\nvar WebGLShader = function WebGLShader(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function getType () {};\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function getSource () {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n\n//# sourceMappingURL=Shader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl/Shader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLFragment = (function (WebGLShader) {\n  function WebGLFragment(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLFragment.__proto__ = WebGLShader;\n  WebGLFragment.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLFragment.prototype.constructor = WebGLFragment;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLFragment.prototype.getType = function getType () {\n    return FRAGMENT_SHADER;\n  };\n\n  return WebGLFragment;\n}(WebGLShader));\n\n\nexport default WebGLFragment;\n\n//# sourceMappingURL=Fragment.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl/Fragment.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLVertex = (function (WebGLShader) {\n  function WebGLVertex(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLVertex.__proto__ = WebGLShader;\n  WebGLVertex.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLVertex.prototype.constructor = WebGLVertex;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVertex.prototype.getType = function getType () {\n    return VERTEX_SHADER;\n  };\n\n  return WebGLVertex;\n}(WebGLShader));\n\n\nexport default WebGLVertex;\n\n//# sourceMappingURL=Vertex.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl/Vertex.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/circlereplay/defaultshader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/circlereplay/defaultshader/Locations.js\n// module id = null\n// module chunks = ","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n//# sourceMappingURL=mat4.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/vec/mat4.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/Replay\n */\n\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nvar WebGLReplay = (function (VectorContext) {\n  function WebGLReplay(tolerance, maxExtent) {\n    VectorContext.call(this);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array.<module:ol/Feature|module:ol/render/Feature>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {module:ol/render/webgl/LineStringReplay|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  if ( VectorContext ) WebGLReplay.__proto__ = VectorContext;\n  WebGLReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLReplay.prototype.constructor = WebGLReplay;\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLReplay.prototype.finish = function finish (context) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n   */\n  WebGLReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n   */\n  WebGLReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  WebGLReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplay = function drawHitDetectionReplay (gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayAll = function drawHitDetectionReplayAll (gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    var result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var gl = context.getGL();\n    var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    var result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  WebGLReplay.prototype.drawElements = function drawElements (gl, context, start, end) {\n    var elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n\n  return WebGLReplay;\n}(VectorContext));\n\n\nexport default WebGLReplay;\n\n//# sourceMappingURL=Replay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/Replay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport var triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n\n//# sourceMappingURL=webgl.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nvar WebGLBuffer = function WebGLBuffer(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n/**\n * @return {Array.<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function getArray () {\n  return this.arr_;\n};\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function getUsage () {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n\n//# sourceMappingURL=Buffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl/Buffer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLCircleReplay = (function (WebGLReplay) {\n  function WebGLCircleReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<Array.<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array.<number>|null),\n     *         strokeColor: (Array.<number>|null),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLCircleReplay.__proto__ = WebGLReplay;\n  WebGLCircleReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLCircleReplay.prototype.constructor = WebGLCircleReplay;\n\n  /**\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLCircleReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    var n = numVertices / 4;\n    var i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 0;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 1;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 2;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 3;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n      this$1.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var radius = circleGeometry.getRadius();\n    var stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      var flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          var lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array.<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLCircleReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n    // object.\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n        this$1.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLCircleReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   */\n  WebGLCircleReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  WebGLCircleReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  };\n\n  return WebGLCircleReplay;\n}(WebGLReplay));\n\n\nexport default WebGLCircleReplay;\n\n//# sourceMappingURL=CircleReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/CircleReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\n//# sourceMappingURL=defaultshader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/texturereplay/defaultshader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/texturereplay/defaultshader/Locations.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\n//# sourceMappingURL=ContextEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl/ContextEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nvar WebGLContext = (function (Disposable) {\n  function WebGLContext(canvas, gl) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/webgl/Context~BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  if ( Disposable ) WebGLContext.__proto__ = Disposable;\n  WebGLContext.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLContext.prototype.constructor = WebGLContext;\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  WebGLContext.prototype.bindBuffer = function bindBuffer (target, buf) {\n    var gl = this.getGL();\n    var arr = buf.getArray();\n    var bufferKey = String(getUid(buf));\n    if (bufferKey in this.bufferCache_) {\n      var bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      var /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  };\n\n  /**\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  WebGLContext.prototype.deleteBuffer = function deleteBuffer (buf) {\n    var gl = this.getGL();\n    var bufferKey = String(getUid(buf));\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLContext.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    unlistenAll(this.canvas_);\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (var key in this$1.bufferCache_) {\n        gl.deleteBuffer(this$1.bufferCache_[key].buffer);\n      }\n      for (var key$1 in this$1.programCache_) {\n        gl.deleteProgram(this$1.programCache_[key$1]);\n      }\n      for (var key$2 in this$1.shaderCache_) {\n        gl.deleteShader(this$1.shaderCache_[key$2]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  WebGLContext.prototype.getCanvas = function getCanvas () {\n    return this.canvas_;\n  };\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLContext.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  WebGLContext.prototype.getHitDetectionFramebuffer = function getHitDetectionFramebuffer () {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  };\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {module:ol/webgl/Shader} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  WebGLContext.prototype.getShader = function getShader (shaderObject) {\n    var shaderKey = String(getUid(shaderObject));\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      var gl = this.getGL();\n      var shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  };\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n   * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  WebGLContext.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      var gl = this.getGL();\n      var program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n  };\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  WebGLContext.prototype.initHitDetectionFramebuffer_ = function initHitDetectionFramebuffer_ () {\n    var gl = this.gl_;\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    var texture = createEmptyTexture(gl, 1, 1);\n    var renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  };\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLContext.prototype.useProgram = function useProgram (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  };\n\n  return WebGLContext;\n}(Disposable));\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n\n//# sourceMappingURL=Context.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl/Context.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nvar WebGLTextureReplay = (function (WebGLReplay) {\n  function WebGLTextureReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array.<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array.<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  if ( WebGLReplay ) WebGLTextureReplay.__proto__ = WebGLReplay;\n  WebGLTextureReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLTextureReplay.prototype.constructor = WebGLTextureReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var textures = this.getTextures(true);\n    var gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        var i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  WebGLTextureReplay.prototype.drawCoordinates = function drawCoordinates (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var anchorX = /** @type {number} */ (this.anchorX);\n    var anchorY = /** @type {number} */ (this.anchorY);\n    var height = /** @type {number} */ (this.height);\n    var imageHeight = /** @type {number} */ (this.imageHeight);\n    var imageWidth = /** @type {number} */ (this.imageWidth);\n    var opacity = /** @type {number} */ (this.opacity);\n    var originX = /** @type {number} */ (this.originX);\n    var originY = /** @type {number} */ (this.originY);\n    var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    var rotation = /** @type {number} */ (-this.rotation);\n    var scale = /** @type {number} */ (this.scale);\n    var width = /** @type {number} */ (this.width);\n    var cos = Math.cos(rotation);\n    var sin = Math.sin(rotation);\n    var numIndices = this.indices.length;\n    var numVertices = this.vertices.length;\n    var i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this$1.origin[0];\n      y = flatCoordinates[i + 1] - this$1.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  };\n\n  /**\n   * @protected\n   * @param {Array.<WebGLTexture>} textures Textures.\n   * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object.<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  WebGLTextureReplay.prototype.createTextures = function createTextures (textures, images, texturePerImage, gl) {\n    var texture, image, uid, i;\n    var ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image).toString();\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      var i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        var end = groupIndices[i];\n        this$1.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  };\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array.<WebGLTexture>} textures Textures.\n   * @param {Array.<number>} groupIndices Texture group indices.\n   */\n  WebGLTextureReplay.prototype.drawReplaySkipping = function drawReplaySkipping (gl, context, skippedFeaturesHash, textures, groupIndices) {\n    var this$1 = this;\n\n    var featureIndex = 0;\n\n    var i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      var groupEnd = groupIndices[i];\n\n      var start = groupStart;\n      var end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        var feature = this$1.startIndicesFeature[featureIndex];\n\n        var featureUid = getUid(feature).toString();\n        if (skippedFeaturesHash[featureUid] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this$1.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this$1.drawElements(gl, context, start, end);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, groupStart, start, end, feature, featureUid;\n    var featureIndex = this.startIndices.length - 1;\n    var hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this$1.hitDetectionGroupIndices[i - 1] : 0;\n      end = this$1.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.finish = function finish (context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @returns {Array.<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getTextures = function getTextures (opt_all) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @returns {Array.<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {};\n\n  return WebGLTextureReplay;\n}(WebGLReplay));\n\n\nexport default WebGLTextureReplay;\n\n//# sourceMappingURL=TextureReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/TextureReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLImageReplay = (function (WebGLTextureReplay) {\n  function WebGLImageReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array.<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array.<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLImageReplay.__proto__ = WebGLTextureReplay;\n  WebGLImageReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLImageReplay.prototype.constructor = WebGLImageReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    var indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object.<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    var anchor = imageStyle.getAnchor();\n    var image = imageStyle.getImage(1);\n    var imageSize = imageStyle.getImageSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var opacity = imageStyle.getOpacity();\n    var origin = imageStyle.getOrigin();\n    var rotateWithView = imageStyle.getRotateWithView();\n    var rotation = imageStyle.getRotation();\n    var size = imageStyle.getSize();\n    var scale = imageStyle.getScale();\n\n    var currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getTextures = function getTextures (opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.hitDetectionTextures_;\n  };\n\n  return WebGLImageReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/ImageReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n\n//# sourceMappingURL=topology.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/topology.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/linestringreplay/defaultshader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/linestringreplay/defaultshader/Locations.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nvar WebGLLineStringReplay = (function (WebGLReplay) {\n  function WebGLLineStringReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array.<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLLineStringReplay.__proto__ = WebGLReplay;\n  WebGLLineStringReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLLineStringReplay.prototype.constructor = WebGLLineStringReplay;\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n\n    var i, ii;\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    var lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    var closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    var startCoords, sign, n;\n    var lastIndex = numIndices;\n    var lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    var p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this$1.indices[numIndices++] = n;\n          this$1.indices[numIndices++] = lastIndex - 1;\n          this$1.indices[numIndices++] = lastIndex;\n\n          this$1.indices[numIndices++] = lastIndex;\n          this$1.indices[numIndices++] = n + 1;\n          this$1.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastIndex - 1;\n        this$1.indices[numIndices++] = lastIndex;\n\n        this$1.indices[numIndices++] = n + 2;\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this$1.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this$1.indices[numIndices++] = n + 1;\n        this$1.indices[numIndices++] = n + 3;\n        this$1.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  };\n\n  /**\n   * @param {Array.<number>} p0 Last coordinates.\n   * @param {Array.<number>} p1 Current coordinates.\n   * @param {Array.<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.addVertices_ = function addVertices_ (p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  };\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.isValid_ = function isValid_ (flatCoordinates, offset, end, stride) {\n    var range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var indexCount = this.indices.length;\n    var ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this$1.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          var lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this$1.origin[0], -this$1.origin[1]);\n          this$1.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawPolygonCoordinates = function drawPolygonCoordinates (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this$1.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  WebGLLineStringReplay.prototype.setPolygonStyle = function setPolygonStyle (feature, opt_index) {\n    var index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  };\n\n  /**\n   * @return {number} Current index.\n   */\n  WebGLLineStringReplay.prototype.getCurrentIndex = function getCurrentIndex () {\n    return this.indices.length;\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLLineStringReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLLineStringReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  WebGLLineStringReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    var strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    var strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  };\n\n  return WebGLLineStringReplay;\n}(WebGLReplay));\n\n\nexport default WebGLLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/LineStringReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n\n//# sourceMappingURL=defaultshader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/polygonreplay/defaultshader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/polygonreplay/defaultshader/Locations.js\n// module id = null\n// module chunks = ","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nvar LinkedList = function LinkedList(opt_circular) {\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function insertItem (data) {\n\n  /** @type {module:ol/structs/LinkedList~Item} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function removeItem () {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function firstItem () {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function lastItem () {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function nextItem () {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function getNextItem () {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function prevItem () {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function getPrevItem () {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function getCurrItem () {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function setFirstItem () {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function concat (list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function getLength () {\n  return this.length_;\n};\n\n\nexport default LinkedList;\n\n//# sourceMappingURL=LinkedList.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/structs/LinkedList.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\nvar WebGLPolygonReplay = (function (WebGLReplay) {\n  function WebGLPolygonReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array.<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLPolygonReplay.__proto__ = WebGLReplay;\n  WebGLPolygonReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLPolygonReplay.prototype.constructor = WebGLPolygonReplay;\n\n  /**\n   * Draw one polygon.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  WebGLPolygonReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    // Triangulate the polygon\n    var outerRing = new LinkedList();\n    var rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    var maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      var holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        var holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this$1.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this$1.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this$1.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        var currList = holeLists[i].list;\n        var start = currList.firstItem();\n        var currItem = start;\n        var intersection = (void 0);\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this$1.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this$1.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this$1.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  };\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {module:ol/structs/LinkedList} list Linked list.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  WebGLPolygonReplay.prototype.processFlatCoordinates_ = function processFlatCoordinates_ (flatCoordinates, stride, list, rtree, clockwise) {\n    var this$1 = this;\n\n    var isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    var i, ii;\n    var n = this.vertices.length / 2;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var start;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p0;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p1;\n    var extents = [];\n    var segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      var end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  };\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygons ring.\n   * @return {Array.<number>} Max X coordinates.\n   */\n  WebGLPolygonReplay.prototype.getMaxCoords_ = function getMaxCoords_ (list) {\n    var start = list.firstItem();\n    var seg = start;\n    var maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  };\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  WebGLPolygonReplay.prototype.classifyPoints_ = function classifyPoints_ (list, rtree, ccw) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var pointsReclassified = false;\n    do {\n      var reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this$1.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  WebGLPolygonReplay.prototype.bridgeHole_ = function bridgeHole_ (hole, holeMaxX, list, listMaxX, rtree) {\n    var this$1 = this;\n\n    var seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    var p1 = seg.p1;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p2 = {x: listMaxX, y: p1.y, i: -1};\n    var minDist = Infinity;\n    var i, ii, bestPoint;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p5;\n\n    var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      var currSeg = intersectingSegments[i];\n      var intersection = this$1.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      var dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        var theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          var currPoint = pointsInTriangle[i];\n          var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.triangulate_ = function triangulate_ (list, rtree) {\n    var this$1 = this;\n\n    var ccw = false;\n    var simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this$1.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this$1.resolveSelfIntersections_(list, rtree)) {\n              simple = this$1.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this$1.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this$1.isClockwise_(list);\n                this$1.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      var numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  WebGLPolygonReplay.prototype.clipEars_ = function clipEars_ (list, rtree, simple, ccw) {\n    var this$1 = this;\n\n    var numIndices = this.indices.length;\n    var start = list.firstItem();\n    var s0 = list.getPrevItem();\n    var s1 = start;\n    var s2 = list.nextItem();\n    var s3 = list.getNextItem();\n    var p0, p1, p2;\n    var processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        var variableCriterion = (void 0);\n        if (simple) {\n          variableCriterion = this$1.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this$1.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this$1.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this$1.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this$1.indices[numIndices++] = p0.i;\n            this$1.indices[numIndices++] = p1.i;\n            this$1.indices[numIndices++] = p2.i;\n            this$1.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  WebGLPolygonReplay.prototype.resolveSelfIntersections_ = function resolveSelfIntersections_ (list, rtree, opt_touch) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    list.nextItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var resolvedIntersections = false;\n\n    do {\n      var intersection = this$1.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        var breakCond = false;\n        var numVertices = this$1.vertices.length;\n        var numIndices = this$1.indices.length;\n        var n = numVertices / 2;\n        var seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        var p = (void 0);\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this$1.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this$1.indices[numIndices++] = seg.p0.i;\n        this$1.indices[numIndices++] = seg.p1.i;\n        this$1.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  WebGLPolygonReplay.prototype.isSimple_ = function isSimple_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var seg = start;\n    do {\n      if (this$1.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  WebGLPolygonReplay.prototype.isClockwise_ = function isClockwise_ (list) {\n    var length = list.getLength() * 2;\n    var flatCoordinates = new Array(length);\n    var start = list.firstItem();\n    var seg = start;\n    var i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.splitPolygon_ = function splitPolygon_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    do {\n      var intersections = this$1.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        var s1 = intersections[0];\n        var n = this$1.vertices.length / 2;\n        var intersection = this$1.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        var p = this$1.createPoint_(intersection[0], intersection[1], n);\n        var newPolygon = new LinkedList();\n        var newRtree = new RBush();\n        this$1.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        var currItem = list.nextItem();\n        while (currItem !== s1) {\n          this$1.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this$1.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this$1.classifyPoints_(list, rtree, false);\n        this$1.triangulate_(list, rtree);\n        this$1.classifyPoints_(newPolygon, newRtree, false);\n        this$1.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  };\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n   */\n  WebGLPolygonReplay.prototype.createPoint_ = function createPoint_ (x, y, i) {\n    var numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n   */\n  WebGLPolygonReplay.prototype.insertItem_ = function insertItem_ (p0, p1, list, opt_rtree) {\n    var seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  };\n\n  /**\n    * @private\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n    * @param {module:ol/structs/LinkedList} list Polygon ring.\n    * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n    */\n  WebGLPolygonReplay.prototype.removeItem_ = function removeItem_ (s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n   */\n  WebGLPolygonReplay.prototype.getPointsInTriangle_ = function getPointsInTriangle_ (p0, p1, p2, rtree, opt_reflex) {\n    var result = [];\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (var j in segmentsInExtent[i]) {\n        var p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n   */\n  WebGLPolygonReplay.prototype.getIntersections_ = function getIntersections_ (segment, rtree, opt_touch) {\n    var this$1 = this;\n\n    var p0 = segment.p0;\n    var p1 = segment.p1;\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    var result = [];\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      var currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this$1.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array.<number>|undefined} Intersection coordinates.\n   */\n  WebGLPolygonReplay.prototype.calculateIntersection_ = function calculateIntersection_ (p0, p1, p2, p3, opt_touch) {\n    var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  WebGLPolygonReplay.prototype.diagonalIsInside_ = function diagonalIsInside_ (p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var endss = multiPolygonGeometry.getEndss();\n    var stride = multiPolygonGeometry.getStride();\n    var currIndex = this.indices.length;\n    var currLineIndex = this.lineStringReplay.getCurrentIndex();\n    var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    var i, ii, j, jj;\n    var start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      if (ends.length > 0) {\n        var outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this$1.origin[0], -this$1.origin[1]);\n        if (outerRing.length) {\n          var holes = [];\n          var holeFlatCoords = (void 0);\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this$1.origin[0], -this$1.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this$1.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this$1.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var this$1 = this;\n\n    var ends = polygonGeometry.getEnds();\n    var stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      var outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this$1.origin[0], -this$1.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLPolygonReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, nextStyle);\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLPolygonReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   */\n  WebGLPolygonReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      var nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        lineWidth: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  };\n\n  return WebGLPolygonReplay;\n}(WebGLReplay));\n\n\nexport default WebGLPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/PolygonReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this$1.emptyBlocks_[i];\n    if (block.width >= width + this$1.space_ &&\n        block.height >= height + this$1.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this$1.space_,\n        offsetY: block.y + this$1.space_,\n        image: this$1.canvas_\n      };\n      this$1.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this$1.context_,\n        block.x + this$1.space_, block.y + this$1.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this$1.split_(i, block, width + this$1.space_, height + this$1.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Atlas.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *  opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this$1.currentHitSize_ * 2, this$1.maxSize_);\n        this$1.currentHitSize_ = size;\n      } else {\n        size = Math.min(this$1.currentSize_ * 2, this$1.maxSize_);\n        this$1.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this$1.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/AtlasManager.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object.<string, number>} width\n * @property {number} height\n */\n\n\nvar WebGLTextReplay = (function (WebGLTextureReplay) {\n  function WebGLTextReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array.<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (module:ol/colorlike~ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLTextReplay.__proto__ = WebGLTextureReplay;\n  WebGLTextReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLTextReplay.prototype.constructor = WebGLTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    if (this.text_) {\n      var flatCoordinates = null;\n      var offset = 0;\n      var end = 2;\n      var stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      var glyphAtlas = this.currAtlas_;\n      var lines = this.text_.split('\\n');\n      var textSize = this.getTextSize_(lines);\n      var i, ii, j, jj, currX, currY, charArr, charInfo;\n      var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            var image = charInfo.image;\n\n            this$1.anchorX = anchorX - currX;\n            this$1.anchorY = anchorY - currY;\n            this$1.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this$1.originY = charInfo.offsetY;\n            this$1.height = glyphAtlas.height;\n            this$1.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this$1.imageHeight = image.height;\n            this$1.imageWidth = image.width;\n\n            if (this$1.images_.length === 0) {\n              this$1.images_.push(image);\n            } else {\n              var currentImage = this$1.images_[this$1.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this$1.groupIndices.push(this$1.indices.length);\n                this$1.images_.push(image);\n              }\n            }\n\n            this$1.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this$1.width;\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Array.<string>} lines Label to draw split to lines.\n   * @return {Array.<number>} Size of the label in pixels.\n   */\n  WebGLTextReplay.prototype.getTextSize_ = function getTextSize_ (lines) {\n    var self = this;\n    var glyphAtlas = this.currAtlas_;\n    var textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    var textWidth = lines.map(function(str) {\n      var sum = 0;\n      for (var i = 0, ii = str.length; i < ii; ++i) {\n        var curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  };\n\n  /**\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLTextReplay.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    for (var i = offset, ii = end; i < ii; i += stride) {\n      this$1.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  WebGLTextReplay.prototype.addCharToAtlas_ = function addCharToAtlas_ (char) {\n    if (char.length === 1) {\n      var glyphAtlas = this.currAtlas_;\n      var state = this.state_;\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object.<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.setTextStyle = function setTextStyle (textStyle) {\n    var state = this.state_;\n    var textFillStyle = textStyle.getFill();\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        var lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      var textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      var textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n   */\n  WebGLTextReplay.prototype.getAtlas_ = function getAtlas_ (state) {\n    var params = [];\n    for (var i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    var hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  };\n\n  /**\n   * @private\n   * @param {Array.<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  WebGLTextReplay.prototype.calculateHash_ = function calculateHash_ (params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    var hash = '';\n    for (var i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getTextures = function getTextures (opt_all) {\n    return this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.textures_;\n  };\n\n  return WebGLTextReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/TextReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array.<number>}\n */\nvar HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nvar WebGLReplayGroup = (function (ReplayGroup) {\n  function WebGLReplayGroup(tolerance, maxExtent, opt_renderBuffer) {\n    ReplayGroup.call(this);\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string,\n     *        Object.<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  if ( ReplayGroup ) WebGLReplayGroup.__proto__ = ReplayGroup;\n  WebGLReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  WebGLReplayGroup.prototype.constructor = WebGLReplayGroup;\n\n  /**\n   * @param {module:ol/style/Style} style Style.\n   * @param {boolean} group Group with previous replay.\n   */\n  WebGLReplayGroup.prototype.addDeclutter = function addDeclutter (style, group) {};\n\n  /**\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplayGroup.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var this$1 = this;\n\n    var functions = [];\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      var arguments$1 = arguments;\n      var this$1 = this;\n\n      var length = functions.length;\n      var result;\n      for (var i = 0; i < length; i++) {\n        result = functions[i].apply(this$1, arguments$1);\n      }\n      return result;\n    };\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLReplayGroup.prototype.finish = function finish (context) {\n    var this$1 = this;\n\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      /**\n       * @type {Function}\n       */\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLReplayGroup.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.replayHitDetection_ = function replayHitDetection_ (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    var i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  WebGLReplayGroup.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  };\n\n  return WebGLReplayGroup;\n}(ReplayGroup));\n\n\nexport default WebGLReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/ReplayGroup.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\nvar WebGLImmediateRenderer = (function (VectorContext) {\n  function WebGLImmediateRenderer(context, center, resolution, rotation, size, extent, pixelRatio) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Text}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  if ( VectorContext ) WebGLImmediateRenderer.__proto__ = VectorContext;\n  WebGLImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLImmediateRenderer.prototype.constructor = WebGLImmediateRenderer;\n\n  /**\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @private\n   */\n  WebGLImmediateRenderer.prototype.drawText_ = function drawText_ (replayGroup, geometry) {\n    var context = this.context_;\n    var replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry, data) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPoint = function drawPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawLineString = function drawLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawCircle = function drawCircle (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    this.imageStyle_ = imageStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    this.textStyle_ = textStyle;\n  };\n\n  return WebGLImmediateRenderer;\n}(VectorContext));\n\n\nexport default WebGLImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/webgl/Immediate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n\n//# sourceMappingURL=defaultmapshader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/defaultmapshader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/defaultmapshader/Locations.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/Layer\n */\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\nvar WebGLLayerRenderer = (function (LayerRenderer) {\n  function WebGLLayerRenderer(mapRenderer, layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/renderer/webgl/Map}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  if ( LayerRenderer ) WebGLLayerRenderer.__proto__ = LayerRenderer;\n  WebGLLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLLayerRenderer.prototype.constructor = WebGLLayerRenderer;\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.bindFramebuffer = function bindFramebuffer (frameState, framebufferDimension) {\n\n    var gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      var postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n\n      var texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    var gl = context.getGL();\n\n    var program = context.getProgram(fragment, vertex);\n\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var viewState = frameState.viewState;\n      var resolution = viewState.resolution;\n      var pixelRatio = frameState.pixelRatio;\n      var extent = frameState.extent;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n      var size = frameState.size;\n\n      var render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getTexCoordMatrix = function getTexCoordMatrix () {\n    return this.texCoordMatrix;\n  };\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLLayerRenderer.prototype.getTexture = function getTexture () {\n    return this.texture;\n  };\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getProjectionMatrix = function getProjectionMatrix () {\n    return this.projectionMatrix;\n  };\n\n  /**\n   * Handle webglcontextlost.\n   */\n  WebGLLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  WebGLLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  WebGLLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {};\n\n  return WebGLLayerRenderer;\n}(LayerRenderer));\n\n\nexport default WebGLLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/Layer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nvar WebGLImageLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLImageLayerRenderer(mapRenderer, imageLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/transform~Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLImageLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLImageLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLImageLayerRenderer.prototype.constructor = WebGLImageLayerRenderer;\n\n  /**\n   * @param {module:ol/ImageBase} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLImageLayerRenderer.prototype.createTexture_ = function createTexture_ (image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    var imageElement = image.getImage();\n    var gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n\n    var gl = this.mapRenderer.getGL();\n\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var viewRotation = viewState.rotation;\n\n    var image = this.image_;\n    var texture = this.texture;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        var loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            var postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      var canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      var texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  };\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {module:ol/extent~Extent} imageExtent Image extent.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function updateProjectionMatrix_ (\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    var canvasExtentWidth = canvasWidth * viewResolution;\n    var canvasExtentHeight = canvasHeight * viewResolution;\n\n    var projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      var coordinate = applyTransform(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n      var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n      if (hasFeature) {\n        return callback.call(thisArg, this.getLayer(), null);\n      } else {\n        return undefined;\n      }\n    } else {\n      var imageSize =\n          [this.image_.getImage().width, this.image_.getImage().height];\n\n      if (!this.hitTransformationMatrix_) {\n        this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n      }\n\n      var pixelOnFrameBuffer = applyTransform(\n        this.hitTransformationMatrix_, pixel.slice());\n\n      if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n          pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n        // outside the image, no need to check\n        return undefined;\n      }\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {module:ol/size~Size} mapSize The map size.\n   * @param {module:ol/size~Size} imageSize The image size.\n   * @return {module:ol/transform~Transform} The transformation matrix.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function getHitTransformationMatrix_ (mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    var mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    var projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    var transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  };\n\n  return WebGLImageLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/ImageLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nvar WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @classdesc\n * WebGL map renderer.\n * @api\n */\nvar WebGLMapRenderer = (function (MapRenderer) {\n  function WebGLMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('CANVAS'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Context}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {module:ol/structs/LRUCache.<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/PriorityQueue.<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {number} Priority.\n       * @this {module:ol/renderer/webgl/Map}\n       */\n      (function(element) {\n        var tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {module:ol/Tile} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            var element = this.tileTextureQueue_.dequeue();\n            var tile = /** @type {module:ol/Tile} */ (element[0]);\n            var tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n            var tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  if ( MapRenderer ) WebGLMapRenderer.__proto__ = MapRenderer;\n  WebGLMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  WebGLMapRenderer.prototype.constructor = WebGLMapRenderer;\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  WebGLMapRenderer.prototype.bindTileTexture = function bindTileTexture (tile, tileSize, tileGutter, magFilter, minFilter) {\n    var gl = this.getGL();\n    var tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      var textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      var texture = gl.createTexture();\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        var clipTileCanvas = this.clipTileContext_.canvas;\n        var clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, tile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var context = this.context_;\n\n      var extent = frameState.extent;\n      var size = frameState.size;\n      var viewState = frameState.viewState;\n      var pixelRatio = frameState.pixelRatio;\n\n      var resolution = viewState.resolution;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n\n      var vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.disposeInternal = function disposeInternal () {\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    MapRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.expireCache_ = function expireCache_ (map, frameState) {\n    var this$1 = this;\n\n    var gl = this.getGL();\n    var textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this$1.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this$1.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this$1.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this$1.textureCache_.pop();\n    }\n  };\n\n  /**\n   * @return {module:ol/webgl/Context} The context.\n   */\n  WebGLMapRenderer.prototype.getContext = function getContext () {\n    return this.context_;\n  };\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  WebGLMapRenderer.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * @return {module:ol/structs/PriorityQueue.<Array>} Tile texture queue.\n   */\n  WebGLMapRenderer.prototype.getTileTextureQueue = function getTileTextureQueue () {\n    return this.tileTextureQueue_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost (event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    var renderers = this.getLayerRenderers();\n    for (var id in renderers) {\n      var renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n    this.initializeGL_();\n    this.getMap().render();\n  };\n\n  /**\n   * @private\n   */\n  WebGLMapRenderer.prototype.initializeGL_ = function initializeGL_ () {\n    var gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  WebGLMapRenderer.prototype.isTileTextureLoaded = function isTileTextureLoaded (tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    var context = this.getContext();\n    var gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array.<module:ol/layer/Layer~State>} */\n    var layerStatesToDraw = [];\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      layerState = layerStatesToDraw[i];\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layerState.layer));\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var this$1 = this;\n\n    var hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n    var result;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  return WebGLMapRenderer;\n}(MapRenderer));\n\n\nexport default WebGLMapRenderer;\n\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/Map.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n\n//# sourceMappingURL=tilelayershader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/tilelayershader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/tilelayershader/Locations.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nvar WebGLTileLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLTileLayerRenderer(mapRenderer, tileLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Fragment}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Vertex}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLTileLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLTileLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLTileLayerRenderer.prototype.constructor = WebGLTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    var mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          var loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n    this.locations_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var this$1 = this;\n\n\n    var mapRenderer = this.mapRenderer;\n    var gl = context.getGL();\n\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n\n    var tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n    var tileSource = tileLayer.getSource();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewState.resolution);\n    var tileResolution = tileGrid.getResolution(z);\n\n    var tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    var pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    var tilePixelResolution = tileResolution / pixelRatio;\n    var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n    var center = viewState.center;\n    var extent = frameState.extent;\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    var framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      var tileRangeSize = tileRange.getSize();\n\n      var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      var framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      var origin = tileGrid.getOrigin(z);\n      var minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      var minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object.<number, Object.<string, module:ol/Tile>>}\n       */\n      var tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      var allTilesLoaded = true;\n      var tmpExtent = createEmpty();\n      var tmpTileRange = new TileRange(0, 0, 0, 0);\n      var childTileRange, drawable, fullyLoaded, tile, tileState;\n      var x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array.<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      var u_tileOffset = new Float32Array(4);\n      for (var i = 0, ii = zs.length; i < ii; ++i) {\n        var tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (var tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this$1.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    var tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {module:ol/Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    var texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    var pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    var pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    var pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    var gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    var imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/TileLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * WebGL renderer for vector layers.\n * @api\n */\nvar WebGLVectorLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLVectorLayerRenderer(mapRenderer, vectorLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?module:ol/layer/Layer~State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLVectorLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLVectorLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLVectorLayerRenderer.prototype.constructor = WebGLVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    this.layerState_ = layerState;\n    var viewState = frameState.viewState;\n    var replayGroup = this.replayGroup_;\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    var gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      var context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layer = this.getLayer();\n      var layerState = this.layerState_;\n      /** @type {!Object.<string, boolean>} */\n      var features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  WebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    var replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/webgl/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    };\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of\n   *     styles.\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  WebGLVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  };\n\n  return WebGLVectorLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/webgl/VectorLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar WebGLMap = (function (PluggableMap) {\n  function WebGLMap(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) WebGLMap.__proto__ = PluggableMap;\n  WebGLMap.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  WebGLMap.prototype.constructor = WebGLMap;\n\n  WebGLMap.prototype.createRenderer = function createRenderer () {\n    var renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return WebGLMap;\n}(PluggableMap));\n\n\nexport default WebGLMap;\n\n//# sourceMappingURL=WebGLMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/WebGLMap.js\n// module id = null\n// module chunks = ","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapBrowserPointerEvent} from './MapBrowserPointerEvent.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as PluggableMap} from './PluggableMap.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorImageTile} from './VectorImageTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\nexport {default as WebGLMap} from './WebGLMap.js';\n\nexport {getUid, inherits, VERSION} from './util.js';\n\n\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/index.js\n// module id = null\n// module chunks = ","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileState.js\n// module id = DL7K\n// module chunks = 0","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/CollectionEventType.js\n// module id = DM+O\n// module chunks = 0","/**\n * @module ol/events/EventTarget\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar EventTarget = (function (Disposable) {\n  function EventTarget() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) EventTarget.__proto__ = Disposable;\n  EventTarget.prototype = Object.create( Disposable && Disposable.prototype );\n  EventTarget.prototype.constructor = EventTarget;\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  EventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, UNDEFINED);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EventTarget.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n   */\n  EventTarget.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this EventTarget has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  EventTarget.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = UNDEFINED;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return EventTarget;\n}(Disposable));\n\n\nexport default EventTarget;\n\n//# sourceMappingURL=EventTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/EventTarget.js\n// module id = DOGX\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/color.js\n// module id = FeXB\n// module chunks = 0","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/GeometryType.js\n// module id = Fu+J\n// module chunks = 0","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/VectorContext.js\n// module id = Heua\n// module chunks = 0","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/Event.js\n// module id = I+mf\n// module chunks = 0","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable () {};\n\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Disposable.js\n// module id = IU0A\n// module chunks = 0","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/coordinate.js\n// module id = IZoy\n// module chunks = 0","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconAnchorUnits.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\nvar IconImage = (function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n      null;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/ImageState}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.tainting_ = false;\n    if (this.imageState_ == ImageState.LOADED) {\n      this.determineTainting_();\n    }\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   */\n  IconImage.prototype.determineTainting_ = function determineTainting_ () {\n    var context = createCanvasContext2D(1, 1);\n    try {\n      context.drawImage(this.image_, 0, 0);\n      context.getImageData(0, 0, 1, 1);\n    } catch (e) {\n      this.tainting_ = true;\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.determineTainting_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {module:ol/ImageState} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.tainting_) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {module:ol/size~Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (this.tainting_ || this.color_ === null) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconImage.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconOrigin.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = (function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    /**\n     * @type {boolean}\n     */\n    var snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      snapToPixel: snapToPixel,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {module:ol/size~Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = image.src || getUid(image).toString();\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {module:ol/ImageState}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconImage}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {module:ol/style/Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      snapToPixel: this.getSnapToPixel(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array.<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {module:ol/color~Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Icon.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar Heatmap = (function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/style/Style>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array.<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/render/Event} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var this$1 = this;\n\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this$1.gradient_[alpha];\n        view8[i + 1] = this$1.gradient_[alpha + 1];\n        view8[i + 2] = this$1.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array.<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Heatmap.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = (function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    VectorLayer.call(this, baseOptions);\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/VectorTile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/string.js\n// module id = J23v\n// module chunks = 0","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/format/FormatType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n\n//# sourceMappingURL=featureloader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/featureloader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl.js\n// module id = JouG\n// module chunks = 0","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/Event.js\n// module id = LKHy\n// module chunks = 0","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/simplify.js\n// module id = LmAy\n// module chunks = 0","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/interpolate.js\n// module id = MB6k\n// module chunks = 0","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/condition.js\n// module id = MJuv\n// module chunks = 0","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Tile.js\n// module id = Mdwg\n// module chunks = 0","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || {};\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      snapToPixel: options.snapToPixel,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      snapToPixel: this.getSnapToPixel(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Circle.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      snapToPixel: snapToPixel\n    });\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      snapToPixel: this.getSnapToPixel(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/RegularShape.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Style.js\n// module id = null\n// module chunks = ","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj.js\n// module id = N9JB\n// module chunks = 0","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/VectorEventType.js\n// module id = NNCy\n// module chunks = 0","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Interaction.js\n// module id = O8Za\n// module chunks = 0","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/asserts.js\n// module id = OEyb\n// module chunks = 0","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    var available = true;\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        var width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas.js\n// module id = Oeue\n// module chunks = 0","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @type {Object.<string, *>}\n    */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] =\n       options.zIndex !== undefined ? options.zIndex : 0;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex();\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  };\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array.<module:ol/layer/Layer>} Array of layers.\n  */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {};\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n  */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {};\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  BaseLayer.prototype.getSourceState = function getSourceState () {};\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Base.js\n// module id = OrOo\n// module chunks = 0","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n//# sourceMappingURL=colorlike.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/colorlike.js\n// module id = QBya\n// module chunks = 0","/**\n * @module ol/source/Tile\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutter = function getGutter (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {};\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  return TileSource;\n}(Source));\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Tile.js\n// module id = Qa85\n// module chunks = 0","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array.<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/MouseSource.js\n// module id = QhLM\n// module chunks = 0","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/transform.js\n// module id = RUSk\n// module chunks = 0","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/Triangulation.js\n// module id = S+g9\n// module chunks = 0","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageTile.js\n// module id = S/bM\n// module chunks = 0","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object.<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {};\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {};\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {};\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {};\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {};\n\n  /**\n   * Translate the geometry. This modifies the geometry coordinates in place.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {};\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {};\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {};\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    source = getProjection(source);\n    var transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Geometry.js\n// module id = SfaQ\n// module chunks = 0","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/quickselect/quickselect.js\n// module id = SpdK\n// module chunks = 0","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Point.js\n// module id = T18w\n// module chunks = 0","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/structs/PriorityQueue.js\n// module id = TcxO\n// module chunks = 0","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n  *     style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Vector.js\n// module id = Umvz\n// module chunks = 0","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n\n//# sourceMappingURL=functions.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/functions.js\n// module id = V2dr\n// module chunks = 0","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/VectorTileRenderType.js\n// module id = VTRI\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    var topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/Layer.js\n// module id = VVyK\n// module chunks = 0","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n    */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/SimpleGeometry.js\n// module id = VgFP\n// module chunks = 0","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserEventType.js\n// module id = Vni7\n// module chunks = 0","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      var extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/loadingstrategy.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector~VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = UNDEFINED;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  return VectorSource;\n}(Source));\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    var extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  var valid = true;\n  var id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  var this$1 = this;\n\n  var extents = [];\n  var newFeatures = [];\n  var geometryFeatures = [];\n\n  for (var i = 0, length = features.length; i < length; i++) {\n    var feature = features[i];\n    var featureKey = getUid(feature).toString();\n    if (this$1.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n    var feature$1 = newFeatures[i$1];\n    var featureKey$1 = getUid(feature$1).toString();\n    this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n    var geometry = feature$1.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature$1);\n    } else {\n      this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n    this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  var modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  var this$1 = this;\n\n  if (opt_fast) {\n    for (var featureId in this$1.featureChangeKeys_) {\n      var keys = this$1.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (var id in this$1.nullGeometryFeatures_) {\n        this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    var geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        var result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  var features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  var features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var closestFeature = null;\n  var closestPoint = [NaN, NaN];\n  var minSquaredDistance = Infinity;\n  var extent = [-Infinity, -Infinity, Infinity, Infinity];\n  var filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        var geometry = feature.getGeometry();\n        var previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          var minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  var feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  var feature = /** @type {module:ol/Feature} */ (event.target);\n  var featureKey = getUid(feature).toString();\n  var geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    var extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  var id = feature.getId();\n  if (id !== undefined) {\n    var sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  var id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    var featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  var this$1 = this;\n\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var extentsToLoad = this.strategy_(extent, resolution);\n  var loop = function ( i, ii ) {\n    var extentToLoad = extentsToLoad[i];\n    var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  };\n\n  for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  var featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  var id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  var this$1 = this;\n\n  var removed = false;\n  for (var id in this$1.idIndex_) {\n    if (this$1.idIndex_[id] === feature) {\n      delete this$1.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Vector.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid/common.js\n// module id = Wrfv\n// module chunks = 0","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ObjectEventType.js\n// module id = XDHy\n// module chunks = 0","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nvar ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array.<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object.<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object.<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object.<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Object.js\n// module id = XOen\n// module chunks = 0","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {};\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {};\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageBase.js\n// module id = Y6UM\n// module chunks = 0","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  CanvasMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/Map.js\n// module id = YNxu\n// module chunks = 0","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pixelworks/lib/util.js\n// module id = YdxN\n// module chunks = 0","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/structs/RBush.js\n// module id = YxaZ\n// module chunks = 0","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/contains.js\n// module id = ZXW8\n// module chunks = 0","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/LinearRing.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array.<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Polygon.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageCanvas.js\n// module id = Zz/k\n// module chunks = 0","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = (function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {module:ol/coordinate~Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Circle.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array.<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array.<module:ol/geom/LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/MultiLineString.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array.<module:ol/geom/Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array.<module:ol/geom/Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/MultiPoint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<Array.<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array.<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array.<Array.<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array.<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array.<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/MultiPolygon.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/center.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = (function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {module:ol/Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires module:ol/interaction/Draw~DrawEvent\n * @api\n */\nvar Draw = (function (PointerInteraction) {\n  function Draw(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {module:ol/geom/GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {module:ol/interaction/Draw~Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {module:ol/interaction/Draw~GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {Array.<module:ol/coordinate~Coordinate>}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Handle move events.\n   * @param {module:ol/MapBrowserEvent} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var this$1 = this;\n\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        potentiallyDone = this.sketchCoords_[0].length >\n            this.minPoints_;\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this$1.freehand_ ? 1 : this$1.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this$1.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    var sketchLineGeom;\n    if (geometry instanceof Polygon &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = geometry.getLinearRing(0);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {module:ol/Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!module:ol/Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  var move = event.type === MapBrowserEventType.POINTERMOVE;\n  var pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    var now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  var pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = coordinates[0];\n    var end = coordinates[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/transform.js\n// module id = azsZ\n// module chunks = 0","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/closest.js\n// module id = bmSR\n// module chunks = 0","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid/TileGrid.js\n// module id = clnH\n// module chunks = 0","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar ImageLayer = (function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Image.js\n// module id = czjk\n// module chunks = 0","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n\n//# sourceMappingURL=Pointer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Pointer.js\n// module id = do1/\n// module chunks = 0","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.opacity_ = options.opacity;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n/**\n* Get the symbolizer opacity.\n* @return {number} Opacity.\n* @api\n*/\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n* Determine whether the symbolizer rotates with the map.\n* @return {boolean} Rotate with map.\n* @api\n*/\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the symoblizer rotation.\n* @return {number} Rotation.\n* @api\n*/\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the symbolizer scale.\n* @return {number} Scale.\n* @api\n*/\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Determine whether the symbolizer should be snapped to a pixel.\n* @return {boolean} The symbolizer should snap to a pixel.\n* @api\n*/\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return this.snapToPixel_;\n};\n\n/**\n* Get the anchor point in pixels. The anchor determines the center point for the\n* symbolizer.\n* @abstract\n* @return {Array.<number>} Anchor.\n*/\nImageStyle.prototype.getAnchor = function getAnchor () {};\n\n/**\n* Get the image element for the symbolizer.\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getImage = function getImage (pixelRatio) {};\n\n/**\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {};\n\n/**\n* @abstract\n* @return {module:ol/ImageState} Image state.\n*/\nImageStyle.prototype.getImageState = function getImageState () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Image size.\n*/\nImageStyle.prototype.getImageSize = function getImageSize () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Size of the hit-detection image.\n*/\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {};\n\n/**\n* Get the origin of the symbolizer.\n* @abstract\n* @return {Array.<number>} Origin.\n*/\nImageStyle.prototype.getOrigin = function getOrigin () {};\n\n/**\n* Get the size of the symbolizer (in pixels).\n* @abstract\n* @return {module:ol/size~Size} Size.\n*/\nImageStyle.prototype.getSize = function getSize () {};\n\n/**\n* Set the opacity.\n*\n* @param {number} opacity Opacity.\n* @api\n*/\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n* Set whether to rotate the style with the view.\n*\n* @param {boolean} rotateWithView Rotate with map.\n* @api\n*/\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number} rotation Rotation.\n* @api\n*/\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number} scale Scale.\n* @api\n*/\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set whether to snap the image to the closest pixel.\n*\n* @param {boolean} snapToPixel Snap to pixel?\n* @api\n*/\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @return {module:ol/events~EventsKey|undefined} Listener key.\n* @template T\n*/\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n/**\n* Load not yet loaded URI.\n* @abstract\n*/\nImageStyle.prototype.load = function load () {};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @template T\n*/\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Image.js\n// module id = dw+W\n// module chunks = 0","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n  */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object.<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * @param {module:ol/TileState} state State.\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Tile.js\n// module id = dzQb\n// module chunks = 0","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rbush/index.js\n// module id = emf4\n// module chunks = 0","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilecoord.js\n// module id = fGqn\n// module chunks = 0","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/LineString.js\n// module id = grfP\n// module chunks = 0","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {};\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {};\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/IntermediateCanvas.js\n// module id = hJl7\n// module chunks = 0","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n\n//# sourceMappingURL=EventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/EventType.js\n// module id = hTFF\n// module chunks = 0","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/deflate.js\n// module id = hrLW\n// module chunks = 0","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/VectorRenderType.js\n// module id = iVNI\n// module chunks = 0","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Property.js\n// module id = jP9t\n// module chunks = 0","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource).toString();\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/Layer.js\n// module id = kHub\n// module chunks = 0","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Fill.js\n// module id = lUmj\n// module chunks = 0","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserEvent.js\n// module id = mDm9\n// module chunks = 0","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        var geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object.<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Feature.js\n// module id = nq2H\n// module chunks = 0","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Observable.js\n// module id = nxYM\n// module chunks = 0","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n* @return {number} Height.\n*/\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n* @return {module:ol/size~Size} Size.\n*/\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n* @return {number} Width.\n*/\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileRange.js\n// module id = o1CS\n// module chunks = 0","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/math.js\n// module id = o1z/\n// module chunks = 0","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/intersectsextent.js\n// module id = pWpL\n// module chunks = 0","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/reverse.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/orient.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileState = tile.getState();\n    var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    var tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = this.getLayer();\n    var tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array.<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/TileLayer.js\n// module id = rLHh\n// module chunks = 0","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileCache.js\n// module id = s52z\n// module chunks = 0","var Processor = require('./processor');\n\nexports.Processor = Processor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pixelworks/lib/index.js\n// module id = tEVf\n// module chunks = 0","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/obj.js\n// module id = tFCN\n// module chunks = 0","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = (function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Image.js\n// module id = ue7j\n// module chunks = 0","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserPointerEvent.js\n// module id = v08A\n// module chunks = 0","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/LayerType.js\n// module id = v5fe\n// module chunks = 0","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/interiorpoint.js\n// module id = vhPq\n// module chunks = 0","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/segments.js\n// module id = vkQb\n// module chunks = 0","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/Units.js\n// module id = vv/+\n// module chunks = 0","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/dom.js\n// module id = w2Al\n// module chunks = 0","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/inflate.js\n// module id = wupX\n// module chunks = 0","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array.<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/ImageLayer.js\n// module id = xXyv\n// module chunks = 0","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/size.js\n// module id = xifc\n// module chunks = 0","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pixelworks/lib/processor.js\n// module id = xwVt\n// module chunks = 0","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/Projection.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/epsg3857.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/epsg4326.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/projections.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/transforms.js\n// module id = null\n// module chunks = ","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/Tile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutter = function getGutter (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutterInternal();\n    }\n  };\n\n  /**\n   * @protected\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutterInternal = function getGutterInternal () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutterInternal(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileImage.js\n// module id = null\n// module chunks = ","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/array.js\n// module id = zF6X\n// module chunks = 0"],"sourceRoot":""}